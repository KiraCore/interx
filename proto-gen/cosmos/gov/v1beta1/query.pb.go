// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/gov/v1beta1/query.proto

package types

import (
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// QueryProposalRequest is the request type for the Query/Proposal RPC method.
type QueryProposalRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId           uint64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryProposalRequest) Reset()         { *m = QueryProposalRequest{} }
func (m *QueryProposalRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProposalRequest) ProtoMessage()    {}
func (*QueryProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{0}
}

func (m *QueryProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalRequest.Unmarshal(m, b)
}
func (m *QueryProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalRequest.Marshal(b, m, deterministic)
}
func (m *QueryProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalRequest.Merge(m, src)
}
func (m *QueryProposalRequest) XXX_Size() int {
	return xxx_messageInfo_QueryProposalRequest.Size(m)
}
func (m *QueryProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalRequest proto.InternalMessageInfo

func (m *QueryProposalRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

// QueryProposalResponse is the response type for the Query/Proposal RPC method.
type QueryProposalResponse struct {
	Proposal             *Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueryProposalResponse) Reset()         { *m = QueryProposalResponse{} }
func (m *QueryProposalResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProposalResponse) ProtoMessage()    {}
func (*QueryProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{1}
}

func (m *QueryProposalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalResponse.Unmarshal(m, b)
}
func (m *QueryProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalResponse.Marshal(b, m, deterministic)
}
func (m *QueryProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalResponse.Merge(m, src)
}
func (m *QueryProposalResponse) XXX_Size() int {
	return xxx_messageInfo_QueryProposalResponse.Size(m)
}
func (m *QueryProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalResponse proto.InternalMessageInfo

func (m *QueryProposalResponse) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// QueryProposalsRequest is the request type for the Query/Proposals RPC method.
type QueryProposalsRequest struct {
	// proposal_status defines the status of the proposals.
	ProposalStatus ProposalStatus `protobuf:"varint,1,opt,name=proposal_status,json=proposalStatus,proto3,enum=cosmos.gov.v1beta1.ProposalStatus" json:"proposal_status,omitempty"`
	// voter defines the voter address for the proposals.
	Voter string `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	// depositor defines the deposit addresses from the proposals.
	Depositor string `protobuf:"bytes,3,opt,name=depositor,proto3" json:"depositor,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination           *query.PageRequest `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryProposalsRequest) Reset()         { *m = QueryProposalsRequest{} }
func (m *QueryProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProposalsRequest) ProtoMessage()    {}
func (*QueryProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{2}
}

func (m *QueryProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalsRequest.Unmarshal(m, b)
}
func (m *QueryProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalsRequest.Marshal(b, m, deterministic)
}
func (m *QueryProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalsRequest.Merge(m, src)
}
func (m *QueryProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryProposalsRequest.Size(m)
}
func (m *QueryProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalsRequest proto.InternalMessageInfo

func (m *QueryProposalsRequest) GetProposalStatus() ProposalStatus {
	if m != nil {
		return m.ProposalStatus
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

func (m *QueryProposalsRequest) GetVoter() string {
	if m != nil {
		return m.Voter
	}
	return ""
}

func (m *QueryProposalsRequest) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *QueryProposalsRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryProposalsResponse is the response type for the Query/Proposals RPC
// method.
type QueryProposalsResponse struct {
	Proposals []*Proposal `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	// pagination defines the pagination in the response.
	Pagination           *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryProposalsResponse) Reset()         { *m = QueryProposalsResponse{} }
func (m *QueryProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProposalsResponse) ProtoMessage()    {}
func (*QueryProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{3}
}

func (m *QueryProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalsResponse.Unmarshal(m, b)
}
func (m *QueryProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalsResponse.Marshal(b, m, deterministic)
}
func (m *QueryProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalsResponse.Merge(m, src)
}
func (m *QueryProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryProposalsResponse.Size(m)
}
func (m *QueryProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalsResponse proto.InternalMessageInfo

func (m *QueryProposalsResponse) GetProposals() []*Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

func (m *QueryProposalsResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryVoteRequest is the request type for the Query/Vote RPC method.
type QueryVoteRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	// voter defines the oter address for the proposals.
	Voter                string   `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryVoteRequest) Reset()         { *m = QueryVoteRequest{} }
func (m *QueryVoteRequest) String() string { return proto.CompactTextString(m) }
func (*QueryVoteRequest) ProtoMessage()    {}
func (*QueryVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{4}
}

func (m *QueryVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVoteRequest.Unmarshal(m, b)
}
func (m *QueryVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVoteRequest.Marshal(b, m, deterministic)
}
func (m *QueryVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVoteRequest.Merge(m, src)
}
func (m *QueryVoteRequest) XXX_Size() int {
	return xxx_messageInfo_QueryVoteRequest.Size(m)
}
func (m *QueryVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVoteRequest proto.InternalMessageInfo

func (m *QueryVoteRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

func (m *QueryVoteRequest) GetVoter() string {
	if m != nil {
		return m.Voter
	}
	return ""
}

// QueryVoteResponse is the response type for the Query/Vote RPC method.
type QueryVoteResponse struct {
	// vote defined the queried vote.
	Vote                 *Vote    `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryVoteResponse) Reset()         { *m = QueryVoteResponse{} }
func (m *QueryVoteResponse) String() string { return proto.CompactTextString(m) }
func (*QueryVoteResponse) ProtoMessage()    {}
func (*QueryVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{5}
}

func (m *QueryVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVoteResponse.Unmarshal(m, b)
}
func (m *QueryVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVoteResponse.Marshal(b, m, deterministic)
}
func (m *QueryVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVoteResponse.Merge(m, src)
}
func (m *QueryVoteResponse) XXX_Size() int {
	return xxx_messageInfo_QueryVoteResponse.Size(m)
}
func (m *QueryVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVoteResponse proto.InternalMessageInfo

func (m *QueryVoteResponse) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

// QueryVotesRequest is the request type for the Query/Votes RPC method.
type QueryVotesRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination           *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryVotesRequest) Reset()         { *m = QueryVotesRequest{} }
func (m *QueryVotesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryVotesRequest) ProtoMessage()    {}
func (*QueryVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{6}
}

func (m *QueryVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVotesRequest.Unmarshal(m, b)
}
func (m *QueryVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVotesRequest.Marshal(b, m, deterministic)
}
func (m *QueryVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVotesRequest.Merge(m, src)
}
func (m *QueryVotesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryVotesRequest.Size(m)
}
func (m *QueryVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVotesRequest proto.InternalMessageInfo

func (m *QueryVotesRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

func (m *QueryVotesRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryVotesResponse is the response type for the Query/Votes RPC method.
type QueryVotesResponse struct {
	// votes defined the queried votes.
	Votes []*Vote `protobuf:"bytes,1,rep,name=votes,proto3" json:"votes,omitempty"`
	// pagination defines the pagination in the response.
	Pagination           *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryVotesResponse) Reset()         { *m = QueryVotesResponse{} }
func (m *QueryVotesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryVotesResponse) ProtoMessage()    {}
func (*QueryVotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{7}
}

func (m *QueryVotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVotesResponse.Unmarshal(m, b)
}
func (m *QueryVotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVotesResponse.Marshal(b, m, deterministic)
}
func (m *QueryVotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVotesResponse.Merge(m, src)
}
func (m *QueryVotesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryVotesResponse.Size(m)
}
func (m *QueryVotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVotesResponse proto.InternalMessageInfo

func (m *QueryVotesResponse) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *QueryVotesResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
type QueryParamsRequest struct {
	// params_type defines which parameters to query for, can be one of "voting",
	// "tallying" or "deposit".
	ParamsType           string   `protobuf:"bytes,1,opt,name=params_type,json=paramsType,proto3" json:"params_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{8}
}

func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryParamsRequest.Unmarshal(m, b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryParamsRequest.Size(m)
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

func (m *QueryParamsRequest) GetParamsType() string {
	if m != nil {
		return m.ParamsType
	}
	return ""
}

// QueryParamsResponse is the response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// voting_params defines the parameters related to voting.
	VotingParams *VotingParams `protobuf:"bytes,1,opt,name=voting_params,json=votingParams,proto3" json:"voting_params,omitempty"`
	// deposit_params defines the parameters related to deposit.
	DepositParams *DepositParams `protobuf:"bytes,2,opt,name=deposit_params,json=depositParams,proto3" json:"deposit_params,omitempty"`
	// tally_params defines the parameters related to tally.
	TallyParams          *TallyParams `protobuf:"bytes,3,opt,name=tally_params,json=tallyParams,proto3" json:"tally_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{9}
}

func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryParamsResponse.Unmarshal(m, b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryParamsResponse.Size(m)
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetVotingParams() *VotingParams {
	if m != nil {
		return m.VotingParams
	}
	return nil
}

func (m *QueryParamsResponse) GetDepositParams() *DepositParams {
	if m != nil {
		return m.DepositParams
	}
	return nil
}

func (m *QueryParamsResponse) GetTallyParams() *TallyParams {
	if m != nil {
		return m.TallyParams
	}
	return nil
}

// QueryDepositRequest is the request type for the Query/Deposit RPC method.
type QueryDepositRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	// depositor defines the deposit addresses from the proposals.
	Depositor            string   `protobuf:"bytes,2,opt,name=depositor,proto3" json:"depositor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryDepositRequest) Reset()         { *m = QueryDepositRequest{} }
func (m *QueryDepositRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDepositRequest) ProtoMessage()    {}
func (*QueryDepositRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{10}
}

func (m *QueryDepositRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositRequest.Unmarshal(m, b)
}
func (m *QueryDepositRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositRequest.Marshal(b, m, deterministic)
}
func (m *QueryDepositRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositRequest.Merge(m, src)
}
func (m *QueryDepositRequest) XXX_Size() int {
	return xxx_messageInfo_QueryDepositRequest.Size(m)
}
func (m *QueryDepositRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositRequest proto.InternalMessageInfo

func (m *QueryDepositRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

func (m *QueryDepositRequest) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

// QueryDepositResponse is the response type for the Query/Deposit RPC method.
type QueryDepositResponse struct {
	// deposit defines the requested deposit.
	Deposit              *Deposit `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryDepositResponse) Reset()         { *m = QueryDepositResponse{} }
func (m *QueryDepositResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDepositResponse) ProtoMessage()    {}
func (*QueryDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{11}
}

func (m *QueryDepositResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositResponse.Unmarshal(m, b)
}
func (m *QueryDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositResponse.Marshal(b, m, deterministic)
}
func (m *QueryDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositResponse.Merge(m, src)
}
func (m *QueryDepositResponse) XXX_Size() int {
	return xxx_messageInfo_QueryDepositResponse.Size(m)
}
func (m *QueryDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositResponse proto.InternalMessageInfo

func (m *QueryDepositResponse) GetDeposit() *Deposit {
	if m != nil {
		return m.Deposit
	}
	return nil
}

// QueryDepositsRequest is the request type for the Query/Deposits RPC method.
type QueryDepositsRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId uint64 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination           *query.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryDepositsRequest) Reset()         { *m = QueryDepositsRequest{} }
func (m *QueryDepositsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDepositsRequest) ProtoMessage()    {}
func (*QueryDepositsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{12}
}

func (m *QueryDepositsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositsRequest.Unmarshal(m, b)
}
func (m *QueryDepositsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositsRequest.Marshal(b, m, deterministic)
}
func (m *QueryDepositsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositsRequest.Merge(m, src)
}
func (m *QueryDepositsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryDepositsRequest.Size(m)
}
func (m *QueryDepositsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositsRequest proto.InternalMessageInfo

func (m *QueryDepositsRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

func (m *QueryDepositsRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryDepositsResponse is the response type for the Query/Deposits RPC method.
type QueryDepositsResponse struct {
	Deposits []*Deposit `protobuf:"bytes,1,rep,name=deposits,proto3" json:"deposits,omitempty"`
	// pagination defines the pagination in the response.
	Pagination           *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueryDepositsResponse) Reset()         { *m = QueryDepositsResponse{} }
func (m *QueryDepositsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDepositsResponse) ProtoMessage()    {}
func (*QueryDepositsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{13}
}

func (m *QueryDepositsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositsResponse.Unmarshal(m, b)
}
func (m *QueryDepositsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositsResponse.Marshal(b, m, deterministic)
}
func (m *QueryDepositsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositsResponse.Merge(m, src)
}
func (m *QueryDepositsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryDepositsResponse.Size(m)
}
func (m *QueryDepositsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositsResponse proto.InternalMessageInfo

func (m *QueryDepositsResponse) GetDeposits() []*Deposit {
	if m != nil {
		return m.Deposits
	}
	return nil
}

func (m *QueryDepositsResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryTallyResultRequest is the request type for the Query/Tally RPC method.
type QueryTallyResultRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId           uint64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTallyResultRequest) Reset()         { *m = QueryTallyResultRequest{} }
func (m *QueryTallyResultRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTallyResultRequest) ProtoMessage()    {}
func (*QueryTallyResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{14}
}

func (m *QueryTallyResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTallyResultRequest.Unmarshal(m, b)
}
func (m *QueryTallyResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTallyResultRequest.Marshal(b, m, deterministic)
}
func (m *QueryTallyResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTallyResultRequest.Merge(m, src)
}
func (m *QueryTallyResultRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTallyResultRequest.Size(m)
}
func (m *QueryTallyResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTallyResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTallyResultRequest proto.InternalMessageInfo

func (m *QueryTallyResultRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

// QueryTallyResultResponse is the response type for the Query/Tally RPC method.
type QueryTallyResultResponse struct {
	// tally defines the requested tally.
	Tally                *TallyResult `protobuf:"bytes,1,opt,name=tally,proto3" json:"tally,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryTallyResultResponse) Reset()         { *m = QueryTallyResultResponse{} }
func (m *QueryTallyResultResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTallyResultResponse) ProtoMessage()    {}
func (*QueryTallyResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e35c0d133e91c0a2, []int{15}
}

func (m *QueryTallyResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTallyResultResponse.Unmarshal(m, b)
}
func (m *QueryTallyResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTallyResultResponse.Marshal(b, m, deterministic)
}
func (m *QueryTallyResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTallyResultResponse.Merge(m, src)
}
func (m *QueryTallyResultResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTallyResultResponse.Size(m)
}
func (m *QueryTallyResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTallyResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTallyResultResponse proto.InternalMessageInfo

func (m *QueryTallyResultResponse) GetTally() *TallyResult {
	if m != nil {
		return m.Tally
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryProposalRequest)(nil), "cosmos.gov.v1beta1.QueryProposalRequest")
	proto.RegisterType((*QueryProposalResponse)(nil), "cosmos.gov.v1beta1.QueryProposalResponse")
	proto.RegisterType((*QueryProposalsRequest)(nil), "cosmos.gov.v1beta1.QueryProposalsRequest")
	proto.RegisterType((*QueryProposalsResponse)(nil), "cosmos.gov.v1beta1.QueryProposalsResponse")
	proto.RegisterType((*QueryVoteRequest)(nil), "cosmos.gov.v1beta1.QueryVoteRequest")
	proto.RegisterType((*QueryVoteResponse)(nil), "cosmos.gov.v1beta1.QueryVoteResponse")
	proto.RegisterType((*QueryVotesRequest)(nil), "cosmos.gov.v1beta1.QueryVotesRequest")
	proto.RegisterType((*QueryVotesResponse)(nil), "cosmos.gov.v1beta1.QueryVotesResponse")
	proto.RegisterType((*QueryParamsRequest)(nil), "cosmos.gov.v1beta1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "cosmos.gov.v1beta1.QueryParamsResponse")
	proto.RegisterType((*QueryDepositRequest)(nil), "cosmos.gov.v1beta1.QueryDepositRequest")
	proto.RegisterType((*QueryDepositResponse)(nil), "cosmos.gov.v1beta1.QueryDepositResponse")
	proto.RegisterType((*QueryDepositsRequest)(nil), "cosmos.gov.v1beta1.QueryDepositsRequest")
	proto.RegisterType((*QueryDepositsResponse)(nil), "cosmos.gov.v1beta1.QueryDepositsResponse")
	proto.RegisterType((*QueryTallyResultRequest)(nil), "cosmos.gov.v1beta1.QueryTallyResultRequest")
	proto.RegisterType((*QueryTallyResultResponse)(nil), "cosmos.gov.v1beta1.QueryTallyResultResponse")
}

func init() { proto.RegisterFile("cosmos/gov/v1beta1/query.proto", fileDescriptor_e35c0d133e91c0a2) }

var fileDescriptor_e35c0d133e91c0a2 = []byte{
	// 933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xce, 0x26, 0x76, 0x6b, 0x3f, 0xb7, 0x01, 0x1e, 0x01, 0xac, 0x25, 0xe0, 0xb0, 0xa2, 0xad,
	0x71, 0xa9, 0x97, 0x38, 0x05, 0xd4, 0x16, 0x50, 0x89, 0x50, 0x5b, 0x54, 0x09, 0x15, 0xa7, 0x02,
	0x89, 0x03, 0xd1, 0xba, 0x5e, 0x2d, 0x2b, 0x1c, 0xcf, 0xd6, 0x33, 0xb6, 0xb0, 0x8c, 0x85, 0xc4,
	0x09, 0xc4, 0x09, 0x15, 0x71, 0x43, 0x54, 0xaa, 0xc4, 0x6f, 0xe1, 0x0e, 0x67, 0x4e, 0x1c, 0x10,
	0xbf, 0x81, 0x03, 0xda, 0x99, 0x37, 0xeb, 0x5d, 0x67, 0xed, 0x5d, 0x97, 0x88, 0x53, 0xec, 0x99,
	0xef, 0x7b, 0xef, 0xfb, 0xde, 0x9b, 0x79, 0x13, 0xc3, 0x8b, 0xf7, 0x18, 0x3f, 0x62, 0xdc, 0xf6,
	0xd8, 0xc8, 0x1e, 0xed, 0x76, 0x5c, 0xe1, 0xec, 0xda, 0xf7, 0x87, 0xee, 0x60, 0xdc, 0x0c, 0x06,
	0x4c, 0x30, 0x44, 0xb5, 0xdf, 0xf4, 0xd8, 0xa8, 0x49, 0xfb, 0x66, 0x83, 0x38, 0x1d, 0x87, 0xbb,
	0x0a, 0x1c, 0x51, 0x03, 0xc7, 0xf3, 0xfb, 0x8e, 0xf0, 0x59, 0x5f, 0xf1, 0xcd, 0x2d, 0x8f, 0x79,
	0x4c, 0x7e, 0xb4, 0xc3, 0x4f, 0xb4, 0xba, 0xed, 0x31, 0xe6, 0xf5, 0x5c, 0xdb, 0x09, 0x7c, 0xdb,
	0xe9, 0xf7, 0x99, 0x90, 0x14, 0xae, 0x77, 0x53, 0x34, 0x85, 0xf9, 0xe5, 0xae, 0xf5, 0x26, 0x6c,
	0x7d, 0x18, 0xe6, 0xbc, 0x33, 0x60, 0x01, 0xe3, 0x4e, 0xaf, 0xed, 0xde, 0x1f, 0xba, 0x5c, 0x60,
	0x0d, 0x2a, 0x01, 0x2d, 0x1d, 0xfa, 0xdd, 0xaa, 0xb1, 0x63, 0xd4, 0x0b, 0x6d, 0xd0, 0x4b, 0xef,
	0x77, 0xad, 0x8f, 0xe1, 0x99, 0x39, 0x22, 0x0f, 0x58, 0x9f, 0xbb, 0xf8, 0x0e, 0x94, 0x34, 0x4c,
	0xd2, 0x2a, 0xad, 0xed, 0xe6, 0x71, 0xdb, 0x4d, 0xcd, 0xdb, 0x2f, 0xfc, 0xfa, 0x47, 0x6d, 0xad,
	0x1d, 0x71, 0xac, 0xbf, 0x8d, 0xb9, 0xc8, 0x5c, 0x6b, 0xba, 0x0d, 0x4f, 0x44, 0x9a, 0xb8, 0x70,
	0xc4, 0x90, 0xcb, 0x04, 0x9b, 0x2d, 0x6b, 0x59, 0x82, 0x03, 0x89, 0x6c, 0x6f, 0x06, 0x89, 0xef,
	0xb8, 0x05, 0xc5, 0x11, 0x13, 0xee, 0xa0, 0xba, 0xbe, 0x63, 0xd4, 0xcb, 0x6d, 0xf5, 0x05, 0xb7,
	0xa1, 0xdc, 0x75, 0x03, 0xc6, 0x7d, 0xc1, 0x06, 0xd5, 0x0d, 0xb9, 0x33, 0x5b, 0xc0, 0x1b, 0x00,
	0xb3, 0x96, 0x54, 0x0b, 0xd2, 0xdc, 0x79, 0x9d, 0x3b, 0xec, 0x5f, 0x53, 0x35, 0x3b, 0x92, 0xe0,
	0x78, 0x2e, 0x89, 0x6f, 0xc7, 0x98, 0x57, 0x4b, 0xdf, 0x3c, 0xac, 0xad, 0xfd, 0xf5, 0xb0, 0xb6,
	0x66, 0x3d, 0x32, 0xe0, 0xd9, 0x79, 0xb3, 0x54, 0xc7, 0xeb, 0x50, 0xd6, 0x92, 0x43, 0x9f, 0x1b,
	0x39, 0x0b, 0x39, 0x23, 0xe1, 0xcd, 0x84, 0xdc, 0x75, 0x29, 0xf7, 0x42, 0xa6, 0x5c, 0x95, 0x3e,
	0xae, 0xd7, 0x3a, 0x80, 0x27, 0xa5, 0xc8, 0x8f, 0x98, 0x70, 0xf3, 0x1e, 0x90, 0xf4, 0x02, 0xc7,
	0xac, 0xdf, 0x84, 0xa7, 0x62, 0x41, 0xc9, 0x74, 0x0b, 0x0a, 0x21, 0x8e, 0x0e, 0x4e, 0x35, 0xcd,
	0x6f, 0x88, 0x27, 0xaf, 0x12, 0x6b, 0x7d, 0x19, 0x0b, 0xc4, 0x73, 0xcb, 0xbb, 0x91, 0x52, 0x9c,
	0xc7, 0xe8, 0xa5, 0xf5, 0xc0, 0x00, 0x8c, 0xa7, 0x27, 0x23, 0x97, 0x95, 0x7b, 0xdd, 0xb9, 0x2c,
	0x27, 0x0a, 0x7c, 0x72, 0x1d, 0x7b, 0x9d, 0x44, 0xdd, 0x71, 0x06, 0xce, 0x51, 0xa2, 0x28, 0x72,
	0xe1, 0x50, 0x8c, 0x03, 0x55, 0xe4, 0x72, 0x48, 0x0b, 0x97, 0xee, 0x8e, 0x03, 0xd7, 0xfa, 0xc7,
	0x80, 0xa7, 0x13, 0x3c, 0x72, 0x73, 0x1b, 0xce, 0x8e, 0x98, 0xf0, 0xfb, 0xde, 0xa1, 0x02, 0x53,
	0x7f, 0x76, 0x16, 0xb8, 0xf2, 0xfb, 0x9e, 0x0a, 0x40, 0xee, 0xce, 0x8c, 0x62, 0x6b, 0xf8, 0x01,
	0x6c, 0xd2, 0x95, 0xd2, 0xd1, 0x94, 0xd1, 0x97, 0xd2, 0xa2, 0xbd, 0xa7, 0x90, 0x89, 0x70, 0x67,
	0xbb, 0xf1, 0x45, 0xbc, 0x05, 0x67, 0x84, 0xd3, 0xeb, 0x8d, 0x75, 0xb4, 0x0d, 0x19, 0xad, 0x96,
	0x16, 0xed, 0x6e, 0x88, 0x4b, 0xc4, 0xaa, 0x88, 0xd9, 0x92, 0xf5, 0x29, 0xb9, 0xa7, 0xa4, 0xb9,
	0xcf, 0x52, 0x62, 0x6a, 0xac, 0xcf, 0x4d, 0x8d, 0xd8, 0x91, 0x3f, 0xa0, 0x61, 0x1b, 0xc5, 0xa7,
	0xf2, 0x5e, 0x83, 0xd3, 0x04, 0xa7, 0xc2, 0x3e, 0xbf, 0xa4, 0x14, 0x24, 0x5c, 0x33, 0xac, 0xaf,
	0x92, 0x41, 0xff, 0xff, 0x1b, 0xf0, 0xb3, 0x1e, 0xd8, 0x33, 0x05, 0xe4, 0xeb, 0x6d, 0x28, 0x91,
	0x4a, 0x7d, 0x0f, 0x72, 0x18, 0x8b, 0x28, 0x27, 0x77, 0x1b, 0xae, 0xc2, 0x73, 0x52, 0xa0, 0x6c,
	0x7f, 0xdb, 0xe5, 0xc3, 0x9e, 0x58, 0xe1, 0x9d, 0xab, 0x1e, 0xe7, 0x46, 0x7d, 0x2b, 0xca, 0xe3,
	0x43, 0x5d, 0x5b, 0x7c, 0xe4, 0x14, 0x4f, 0xdf, 0x75, 0xc9, 0x69, 0xfd, 0x5e, 0x86, 0xa2, 0x8c,
	0x8c, 0x3f, 0x18, 0x50, 0xd2, 0x53, 0x1c, 0xeb, 0x69, 0x41, 0xd2, 0x9e, 0x68, 0xf3, 0x95, 0x1c,
	0x48, 0x25, 0xd4, 0xda, 0xfb, 0xfa, 0xb7, 0x3f, 0x1f, 0xac, 0x5f, 0xc2, 0x8b, 0x76, 0xca, 0x3f,
	0x03, 0xd1, 0x83, 0x61, 0x4f, 0x62, 0xa5, 0x98, 0xe2, 0xb7, 0x06, 0x94, 0xa3, 0x67, 0x09, 0xb3,
	0xb3, 0xe9, 0x93, 0x67, 0x36, 0xf2, 0x40, 0x49, 0xd9, 0x39, 0xa9, 0xac, 0x86, 0x2f, 0x2c, 0x55,
	0x86, 0x3f, 0x1a, 0x50, 0x08, 0xc7, 0x25, 0xbe, 0xbc, 0x30, 0x76, 0xec, 0x71, 0x32, 0xcf, 0x65,
	0xa0, 0x28, 0xf9, 0xbb, 0x32, 0xf9, 0x35, 0xbc, 0xb2, 0x42, 0x59, 0x6c, 0x39, 0xa9, 0xed, 0x89,
	0x7c, 0xce, 0xa6, 0xf8, 0xbd, 0x01, 0x45, 0x39, 0xf9, 0x71, 0x79, 0xce, 0xa8, 0x38, 0xe7, 0xb3,
	0x60, 0xa4, 0xed, 0x8a, 0xd4, 0xb6, 0x87, 0xbb, 0x2b, 0x6b, 0xc3, 0xef, 0x0c, 0x38, 0x45, 0xb3,
	0x71, 0x71, 0xb6, 0xc4, 0xcb, 0x60, 0x5e, 0xc8, 0xc4, 0x91, 0xac, 0xd7, 0xa4, 0xac, 0x06, 0xd6,
	0x53, 0x65, 0x49, 0xac, 0x3d, 0x89, 0x3d, 0x32, 0x53, 0xfc, 0xc5, 0x80, 0xd3, 0x74, 0xc3, 0x71,
	0x71, 0x9a, 0xe4, 0xc8, 0x35, 0xeb, 0xd9, 0x40, 0x12, 0x74, 0x4b, 0x0a, 0xda, 0xc7, 0xeb, 0xab,
	0xd4, 0x49, 0x8f, 0x18, 0x7b, 0x12, 0x8d, 0xe9, 0x29, 0xfe, 0x64, 0x40, 0x49, 0x8f, 0x30, 0xcc,
	0x14, 0xc0, 0xb3, 0xaf, 0xe1, 0xfc, 0x3c, 0xb4, 0xde, 0x92, 0x5a, 0xdf, 0xc0, 0xcb, 0x8f, 0xa3,
	0x15, 0x1f, 0x19, 0x50, 0x89, 0x4d, 0x13, 0xbc, 0xb8, 0x30, 0xf1, 0xf1, 0x39, 0x67, 0xbe, 0x9a,
	0x0f, 0xfc, 0x5f, 0x0e, 0x9f, 0x1c, 0x6b, 0xfb, 0x8d, 0x4f, 0xea, 0x9e, 0x2f, 0x3e, 0x1b, 0x76,
	0x9a, 0xf7, 0xd8, 0x91, 0xa6, 0xab, 0x3f, 0x97, 0x78, 0xf7, 0x73, 0xfb, 0x0b, 0x19, 0x2b, 0x3c,
	0x1a, 0xbc, 0x73, 0x4a, 0xfe, 0x06, 0xd9, 0xfb, 0x37, 0x00, 0x00, 0xff, 0xff, 0x21, 0xc5, 0x49,
	0x94, 0x37, 0x0d, 0x00, 0x00,
}
