// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/gov/v1beta1/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the gov module's genesis state.
type GenesisState struct {
	// starting_proposal_id is the ID of the starting proposal.
	StartingProposalId uint64 `protobuf:"varint,1,opt,name=starting_proposal_id,json=startingProposalId,proto3" json:"starting_proposal_id,omitempty"`
	// deposits defines all the deposits present at genesis.
	Deposits []*Deposit `protobuf:"bytes,2,rep,name=deposits,proto3" json:"deposits,omitempty"`
	// votes defines all the votes present at genesis.
	Votes []*Vote `protobuf:"bytes,3,rep,name=votes,proto3" json:"votes,omitempty"`
	// proposals defines all the proposals present at genesis.
	Proposals []*Proposal `protobuf:"bytes,4,rep,name=proposals,proto3" json:"proposals,omitempty"`
	// params defines all the paramaters of related to deposit.
	DepositParams *DepositParams `protobuf:"bytes,5,opt,name=deposit_params,json=depositParams,proto3" json:"deposit_params,omitempty"`
	// params defines all the paramaters of related to voting.
	VotingParams *VotingParams `protobuf:"bytes,6,opt,name=voting_params,json=votingParams,proto3" json:"voting_params,omitempty"`
	// params defines all the paramaters of related to tally.
	TallyParams          *TallyParams `protobuf:"bytes,7,opt,name=tally_params,json=tallyParams,proto3" json:"tally_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_43cd825e0fa7a627, []int{0}
}

func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisState.Unmarshal(m, b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return xxx_messageInfo_GenesisState.Size(m)
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetStartingProposalId() uint64 {
	if m != nil {
		return m.StartingProposalId
	}
	return 0
}

func (m *GenesisState) GetDeposits() []*Deposit {
	if m != nil {
		return m.Deposits
	}
	return nil
}

func (m *GenesisState) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *GenesisState) GetProposals() []*Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

func (m *GenesisState) GetDepositParams() *DepositParams {
	if m != nil {
		return m.DepositParams
	}
	return nil
}

func (m *GenesisState) GetVotingParams() *VotingParams {
	if m != nil {
		return m.VotingParams
	}
	return nil
}

func (m *GenesisState) GetTallyParams() *TallyParams {
	if m != nil {
		return m.TallyParams
	}
	return nil
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "cosmos.gov.v1beta1.GenesisState")
}

func init() { proto.RegisterFile("cosmos/gov/v1beta1/genesis.proto", fileDescriptor_43cd825e0fa7a627) }

var fileDescriptor_43cd825e0fa7a627 = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0xce, 0xd2, 0x40,
	0x10, 0xc7, 0xc5, 0x0f, 0x10, 0x16, 0x30, 0xba, 0x62, 0xd2, 0x00, 0xa6, 0xb5, 0xa7, 0xc6, 0xc4,
	0x36, 0xe0, 0xcd, 0xc4, 0x4b, 0x63, 0x62, 0x38, 0x98, 0x60, 0x35, 0x1e, 0xbc, 0x34, 0x0b, 0xdd,
	0xac, 0x8d, 0x2d, 0xd3, 0x74, 0xd6, 0x46, 0x5e, 0xc9, 0x27, 0xf1, 0x29, 0xf0, 0xec, 0x95, 0x27,
	0x30, 0xdd, 0xdd, 0x6a, 0x89, 0xf5, 0x3b, 0x41, 0x67, 0xff, 0xfb, 0xfb, 0xcd, 0x4e, 0x86, 0x38,
	0x07, 0xc0, 0x1c, 0x30, 0x10, 0x50, 0x05, 0xd5, 0x7a, 0xcf, 0x25, 0x5b, 0x07, 0x82, 0x1f, 0x39,
	0xa6, 0xe8, 0x17, 0x25, 0x48, 0xa0, 0x54, 0x27, 0x7c, 0x01, 0x95, 0x6f, 0x12, 0x8b, 0xb9, 0x00,
	0x01, 0xea, 0x38, 0xa8, 0xff, 0xe9, 0xe4, 0x62, 0xd5, 0xc5, 0x82, 0x4a, 0x9f, 0xba, 0xbf, 0xfa,
	0x64, 0xfa, 0x46, 0x93, 0xdf, 0x4b, 0x26, 0x39, 0x7d, 0x47, 0xe6, 0x28, 0x59, 0x29, 0xd3, 0xa3,
	0x88, 0x8b, 0x12, 0x0a, 0x40, 0x96, 0xc5, 0x69, 0x62, 0xf5, 0x9c, 0x9e, 0xd7, 0x0f, 0xed, 0xcb,
	0xd9, 0x5e, 0x9e, 0x58, 0x9e, 0xbd, 0x74, 0xbb, 0x52, 0x6e, 0x44, 0x9b, 0xf2, 0xce, 0x54, 0xb7,
	0x09, 0xdd, 0x92, 0x51, 0xc2, 0x0b, 0xc0, 0x54, 0xa2, 0x75, 0xd7, 0xb9, 0xf1, 0x26, 0x9b, 0xa5,
	0xff, 0x6f, 0xfb, 0xfe, 0x6b, 0x9d, 0x09, 0x1f, 0xfc, 0x38, 0xdb, 0x77, 0xbe, 0xff, 0xb4, 0x47,
	0xa6, 0x80, 0xd1, 0x9f, 0xeb, 0xf4, 0x15, 0x19, 0x54, 0x20, 0x39, 0x5a, 0x37, 0x8a, 0x63, 0x75,
	0x71, 0x3e, 0x82, 0xe4, 0xe1, 0xcc, 0x40, 0x06, 0xf5, 0x17, 0x46, 0xfa, 0x16, 0x7d, 0x4b, 0xc6,
	0x4d, 0xb7, 0x68, 0xf5, 0x15, 0x62, 0xd5, 0x85, 0x68, 0x9a, 0x0f, 0x1f, 0x1a, 0xcc, 0xb8, 0xa9,
	0x60, 0xf4, 0x97, 0x40, 0x05, 0xb9, 0x6f, 0x3a, 0x8b, 0x0b, 0x56, 0xb2, 0x1c, 0xad, 0x81, 0xd3,
	0xf3, 0x26, 0x9b, 0xa7, 0xb7, 0x3c, 0x6f, 0xa7, 0x82, 0xe1, 0x93, 0x1a, 0x7c, 0x39, 0xdb, 0x8f,
	0xf5, 0x30, 0xaf, 0x31, 0x6e, 0x34, 0x4b, 0xda, 0x69, 0x7a, 0x20, 0xb3, 0x0a, 0xf4, 0xb0, 0xb5,
	0x67, 0xa8, 0x3c, 0xce, 0x7f, 0x9e, 0x5f, 0x8f, 0x5f, 0x6b, 0x56, 0x46, 0x33, 0xd7, 0x9a, 0x2b,
	0x88, 0x1b, 0x4d, 0xab, 0x56, 0x96, 0xc6, 0x64, 0x2a, 0x59, 0x96, 0x9d, 0x1a, 0xc7, 0x3d, 0xe5,
	0xb0, 0xbb, 0x1c, 0x1f, 0xea, 0x9c, 0x51, 0x2c, 0x8d, 0xe2, 0x91, 0x56, 0xb4, 0x11, 0x6e, 0x34,
	0x91, 0xad, 0xe4, 0xb3, 0x4f, 0x9e, 0x48, 0xe5, 0xe7, 0xaf, 0x7b, 0xff, 0x00, 0x79, 0x60, 0xd6,
	0x52, 0xff, 0x3c, 0xc7, 0xe4, 0x4b, 0xf0, 0x4d, 0xed, 0xa8, 0x3c, 0x15, 0x1c, 0xf7, 0x43, 0xb5,
	0x9e, 0x2f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xf6, 0x22, 0x54, 0x0a, 0x03, 0x00, 0x00,
}
