// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/evidence/v1beta1/tx.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/regen-network/cosmos-proto"
	anypb "google.golang.org/protobuf/types/known/anypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MsgSubmitEvidence represents a message that supports submitting arbitrary
// Evidence of misbehavior such as equivocation or counterfactual signing.
type MsgSubmitEvidence struct {
	Submitter            string     `protobuf:"bytes,1,opt,name=submitter,proto3" json:"submitter,omitempty"`
	Evidence             *anypb.Any `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MsgSubmitEvidence) Reset()         { *m = MsgSubmitEvidence{} }
func (m *MsgSubmitEvidence) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitEvidence) ProtoMessage()    {}
func (*MsgSubmitEvidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e3242cb23c956e0, []int{0}
}

func (m *MsgSubmitEvidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSubmitEvidence.Unmarshal(m, b)
}
func (m *MsgSubmitEvidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSubmitEvidence.Marshal(b, m, deterministic)
}
func (m *MsgSubmitEvidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitEvidence.Merge(m, src)
}
func (m *MsgSubmitEvidence) XXX_Size() int {
	return xxx_messageInfo_MsgSubmitEvidence.Size(m)
}
func (m *MsgSubmitEvidence) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitEvidence.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitEvidence proto.InternalMessageInfo

func (m *MsgSubmitEvidence) GetSubmitter() string {
	if m != nil {
		return m.Submitter
	}
	return ""
}

func (m *MsgSubmitEvidence) GetEvidence() *anypb.Any {
	if m != nil {
		return m.Evidence
	}
	return nil
}

// MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
type MsgSubmitEvidenceResponse struct {
	// hash defines the hash of the evidence.
	Hash                 []byte   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgSubmitEvidenceResponse) Reset()         { *m = MsgSubmitEvidenceResponse{} }
func (m *MsgSubmitEvidenceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitEvidenceResponse) ProtoMessage()    {}
func (*MsgSubmitEvidenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e3242cb23c956e0, []int{1}
}

func (m *MsgSubmitEvidenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSubmitEvidenceResponse.Unmarshal(m, b)
}
func (m *MsgSubmitEvidenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSubmitEvidenceResponse.Marshal(b, m, deterministic)
}
func (m *MsgSubmitEvidenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitEvidenceResponse.Merge(m, src)
}
func (m *MsgSubmitEvidenceResponse) XXX_Size() int {
	return xxx_messageInfo_MsgSubmitEvidenceResponse.Size(m)
}
func (m *MsgSubmitEvidenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitEvidenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitEvidenceResponse proto.InternalMessageInfo

func (m *MsgSubmitEvidenceResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgSubmitEvidence)(nil), "cosmos.evidence.v1beta1.MsgSubmitEvidence")
	proto.RegisterType((*MsgSubmitEvidenceResponse)(nil), "cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse")
}

func init() { proto.RegisterFile("cosmos/evidence/v1beta1/tx.proto", fileDescriptor_3e3242cb23c956e0) }

var fileDescriptor_3e3242cb23c956e0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xce, 0x2f, 0xce,
	0xcd, 0x2f, 0xd6, 0x4f, 0x2d, 0xcb, 0x4c, 0x49, 0xcd, 0x4b, 0x4e, 0xd5, 0x2f, 0x33, 0x4c, 0x4a,
	0x2d, 0x49, 0x34, 0xd4, 0x2f, 0xa9, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x87, 0xa8,
	0xd0, 0x83, 0xa9, 0xd0, 0x83, 0xaa, 0x90, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xab, 0xd1, 0x07,
	0xb1, 0x20, 0xca, 0xa5, 0x24, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xbc, 0xa4, 0xd2,
	0x34, 0xfd, 0xc4, 0xbc, 0x4a, 0x98, 0x14, 0xc4, 0xa4, 0x78, 0x88, 0x1e, 0xa8, 0xb1, 0x60, 0x8e,
	0x52, 0x35, 0x97, 0xa0, 0x6f, 0x71, 0x7a, 0x70, 0x69, 0x52, 0x6e, 0x66, 0x89, 0x2b, 0xd4, 0x22,
	0x21, 0x19, 0x2e, 0xce, 0x62, 0xb0, 0x48, 0x49, 0x6a, 0x91, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67,
	0x10, 0x42, 0x40, 0xc8, 0x8e, 0x8b, 0x03, 0xe6, 0x24, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x11, 0x3d, 0x88, 0xdd, 0x7a, 0x30, 0xbb, 0xf5, 0x1c, 0xf3, 0x2a, 0x9d, 0x78, 0x4e, 0x6d, 0xd1,
	0xe5, 0x80, 0x99, 0x19, 0x04, 0xd7, 0x63, 0xc5, 0xd1, 0xb1, 0x40, 0x9e, 0xe1, 0xc5, 0x02, 0x79,
	0x06, 0x25, 0x7d, 0x2e, 0x49, 0x0c, 0xcb, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85,
	0x84, 0xb8, 0x58, 0x32, 0x12, 0x8b, 0x33, 0x24, 0x58, 0x14, 0x18, 0x35, 0x78, 0x82, 0xc0, 0x6c,
	0xa3, 0x72, 0x2e, 0x66, 0xdf, 0xe2, 0x74, 0xa1, 0x02, 0x2e, 0x3e, 0x34, 0x17, 0x6b, 0xe9, 0xe1,
	0x08, 0x2c, 0x3d, 0x0c, 0x0b, 0xa4, 0x8c, 0x88, 0x57, 0x0b, 0x73, 0x8c, 0x93, 0xf1, 0x8a, 0x47,
	0x72, 0x8c, 0x51, 0xba, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xd0, 0x50,
	0x84, 0x52, 0xba, 0xc5, 0x29, 0xd9, 0xfa, 0x15, 0x88, 0xb8, 0x2c, 0xa9, 0x2c, 0x48, 0x2d, 0x4e,
	0x62, 0x03, 0x07, 0x87, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x47, 0x2b, 0x47, 0xeb, 0x01,
	0x00, 0x00,
}
