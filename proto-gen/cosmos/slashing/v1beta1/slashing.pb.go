// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/slashing/v1beta1/slashing.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ValidatorSigningInfo defines a validator's signing info for monitoring their
// liveness activity.
type ValidatorSigningInfo struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Height at which validator was first a candidate OR was unjailed
	StartHeight int64 `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	// Index which is incremented each time the validator was a bonded
	// in a block and may have signed a precommit or not. This in conjunction with the
	// `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
	IndexOffset int64 `protobuf:"varint,3,opt,name=index_offset,json=indexOffset,proto3" json:"index_offset,omitempty"`
	// Timestamp until which the validator is jailed due to liveness downtime.
	JailedUntil *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=jailed_until,json=jailedUntil,proto3" json:"jailed_until,omitempty"`
	// Whether or not a validator has been tombstoned (killed out of validator set). It is set
	// once the validator commits an equivocation or for any other configured misbehiavor.
	Tombstoned bool `protobuf:"varint,5,opt,name=tombstoned,proto3" json:"tombstoned,omitempty"`
	// A counter kept to avoid unnecessary array reads.
	// Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
	MissedBlocksCounter  int64    `protobuf:"varint,6,opt,name=missed_blocks_counter,json=missedBlocksCounter,proto3" json:"missed_blocks_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorSigningInfo) Reset()         { *m = ValidatorSigningInfo{} }
func (m *ValidatorSigningInfo) String() string { return proto.CompactTextString(m) }
func (*ValidatorSigningInfo) ProtoMessage()    {}
func (*ValidatorSigningInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1078e5d96a74cc52, []int{0}
}

func (m *ValidatorSigningInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSigningInfo.Unmarshal(m, b)
}
func (m *ValidatorSigningInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSigningInfo.Marshal(b, m, deterministic)
}
func (m *ValidatorSigningInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSigningInfo.Merge(m, src)
}
func (m *ValidatorSigningInfo) XXX_Size() int {
	return xxx_messageInfo_ValidatorSigningInfo.Size(m)
}
func (m *ValidatorSigningInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSigningInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSigningInfo proto.InternalMessageInfo

func (m *ValidatorSigningInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ValidatorSigningInfo) GetStartHeight() int64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *ValidatorSigningInfo) GetIndexOffset() int64 {
	if m != nil {
		return m.IndexOffset
	}
	return 0
}

func (m *ValidatorSigningInfo) GetJailedUntil() *timestamppb.Timestamp {
	if m != nil {
		return m.JailedUntil
	}
	return nil
}

func (m *ValidatorSigningInfo) GetTombstoned() bool {
	if m != nil {
		return m.Tombstoned
	}
	return false
}

func (m *ValidatorSigningInfo) GetMissedBlocksCounter() int64 {
	if m != nil {
		return m.MissedBlocksCounter
	}
	return 0
}

// Params represents the parameters used for by the slashing module.
type Params struct {
	SignedBlocksWindow      int64                `protobuf:"varint,1,opt,name=signed_blocks_window,json=signedBlocksWindow,proto3" json:"signed_blocks_window,omitempty"`
	MinSignedPerWindow      []byte               `protobuf:"bytes,2,opt,name=min_signed_per_window,json=minSignedPerWindow,proto3" json:"min_signed_per_window,omitempty"`
	DowntimeJailDuration    *durationpb.Duration `protobuf:"bytes,3,opt,name=downtime_jail_duration,json=downtimeJailDuration,proto3" json:"downtime_jail_duration,omitempty"`
	SlashFractionDoubleSign []byte               `protobuf:"bytes,4,opt,name=slash_fraction_double_sign,json=slashFractionDoubleSign,proto3" json:"slash_fraction_double_sign,omitempty"`
	SlashFractionDowntime   []byte               `protobuf:"bytes,5,opt,name=slash_fraction_downtime,json=slashFractionDowntime,proto3" json:"slash_fraction_downtime,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_1078e5d96a74cc52, []int{1}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetSignedBlocksWindow() int64 {
	if m != nil {
		return m.SignedBlocksWindow
	}
	return 0
}

func (m *Params) GetMinSignedPerWindow() []byte {
	if m != nil {
		return m.MinSignedPerWindow
	}
	return nil
}

func (m *Params) GetDowntimeJailDuration() *durationpb.Duration {
	if m != nil {
		return m.DowntimeJailDuration
	}
	return nil
}

func (m *Params) GetSlashFractionDoubleSign() []byte {
	if m != nil {
		return m.SlashFractionDoubleSign
	}
	return nil
}

func (m *Params) GetSlashFractionDowntime() []byte {
	if m != nil {
		return m.SlashFractionDowntime
	}
	return nil
}

func init() {
	proto.RegisterType((*ValidatorSigningInfo)(nil), "cosmos.slashing.v1beta1.ValidatorSigningInfo")
	proto.RegisterType((*Params)(nil), "cosmos.slashing.v1beta1.Params")
}

func init() {
	proto.RegisterFile("cosmos/slashing/v1beta1/slashing.proto", fileDescriptor_1078e5d96a74cc52)
}

var fileDescriptor_1078e5d96a74cc52 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x3f, 0x53, 0xd4, 0x4e,
	0x18, 0x26, 0xbf, 0xe3, 0x87, 0xb8, 0x77, 0xd5, 0x72, 0x78, 0xf1, 0xd4, 0xcb, 0xb9, 0x05, 0x73,
	0x16, 0x24, 0x03, 0x74, 0x94, 0x91, 0x71, 0xd4, 0x42, 0x31, 0xa0, 0xce, 0x58, 0x98, 0xd9, 0x64,
	0xf7, 0x72, 0x2b, 0xc9, 0xee, 0x4d, 0x76, 0x23, 0x60, 0x67, 0x47, 0x49, 0x49, 0x49, 0xe9, 0x47,
	0xf1, 0x33, 0x58, 0x9c, 0x33, 0x56, 0xd6, 0x74, 0x76, 0x4e, 0x76, 0x13, 0xb8, 0x39, 0x0e, 0x67,
	0xa8, 0x92, 0xf7, 0x79, 0x9f, 0xf7, 0x79, 0xff, 0x26, 0x60, 0x2d, 0x16, 0x32, 0x13, 0xd2, 0x93,
	0x29, 0x96, 0x23, 0xc6, 0x13, 0xef, 0xf3, 0x46, 0x44, 0x15, 0xde, 0xb8, 0x04, 0xdc, 0x71, 0x2e,
	0x94, 0x80, 0x1d, 0xc3, 0x73, 0x2f, 0xe1, 0x8a, 0xd7, 0x6d, 0x27, 0x22, 0x11, 0x9a, 0xe3, 0x95,
	0x6f, 0x86, 0xde, 0xed, 0x25, 0x42, 0x24, 0x29, 0xf5, 0xb4, 0x15, 0x15, 0x43, 0x8f, 0x14, 0x39,
	0x56, 0x4c, 0xf0, 0xca, 0xef, 0xcc, 0xfa, 0x15, 0xcb, 0xa8, 0x54, 0x38, 0x1b, 0x1b, 0x02, 0x3a,
	0x69, 0x80, 0xf6, 0x3b, 0x9c, 0x32, 0x82, 0x95, 0xc8, 0xf7, 0x58, 0xc2, 0x19, 0x4f, 0x5e, 0xf0,
	0xa1, 0x80, 0x36, 0xb8, 0x83, 0x09, 0xc9, 0xa9, 0x94, 0xb6, 0xd5, 0xb7, 0x06, 0x77, 0x83, 0xda,
	0x84, 0xdb, 0xa0, 0x25, 0x15, 0xce, 0x55, 0x38, 0xa2, 0x2c, 0x19, 0x29, 0xfb, 0xbf, 0xbe, 0x35,
	0x68, 0xf8, 0x9d, 0x8b, 0x89, 0xb3, 0x72, 0x8c, 0xb3, 0x74, 0x1b, 0x4d, 0x7b, 0x51, 0xd0, 0xd4,
	0xe6, 0x73, 0x6d, 0x95, 0xb1, 0x8c, 0x13, 0x7a, 0x14, 0x8a, 0xe1, 0x50, 0x52, 0x65, 0x37, 0x66,
	0x63, 0xa7, 0xbd, 0x28, 0x68, 0x6a, 0xf3, 0xb5, 0xb6, 0xe0, 0x47, 0xd0, 0xfa, 0x84, 0x59, 0x4a,
	0x49, 0x58, 0x70, 0xc5, 0x52, 0x7b, 0xb1, 0x6f, 0x0d, 0x9a, 0x9b, 0x5d, 0xd7, 0xb4, 0xe8, 0xd6,
	0x2d, 0xba, 0xfb, 0x75, 0x8b, 0xbe, 0xf3, 0x7d, 0xe2, 0x2c, 0x5c, 0x69, 0x4f, 0x47, 0xa3, 0xd3,
	0x9f, 0x8e, 0x15, 0x34, 0x0d, 0xf4, 0xb6, 0x44, 0x60, 0x0f, 0x00, 0x25, 0xb2, 0x48, 0x2a, 0xc1,
	0x29, 0xb1, 0xff, 0xef, 0x5b, 0x83, 0xe5, 0x60, 0x0a, 0x81, 0xfb, 0x60, 0x35, 0x63, 0x52, 0x52,
	0x12, 0x46, 0xa9, 0x88, 0x0f, 0x64, 0x18, 0x8b, 0x82, 0x2b, 0x9a, 0xdb, 0x4b, 0xba, 0x89, 0xfe,
	0xc5, 0xc4, 0x79, 0x68, 0x12, 0xcd, 0xa5, 0xa1, 0x60, 0xc5, 0xe0, 0xbe, 0x86, 0x9f, 0x1a, 0x74,
	0x7b, 0xf9, 0xec, 0xdc, 0x59, 0xf8, 0x7d, 0xee, 0x58, 0xe8, 0xcf, 0x22, 0x58, 0xda, 0xc5, 0x39,
	0xce, 0x24, 0x7c, 0x03, 0xda, 0x92, 0x25, 0xfc, 0x4a, 0xe3, 0x90, 0x71, 0x22, 0x0e, 0xf5, 0x26,
	0x1a, 0xbe, 0x73, 0x31, 0x71, 0x1e, 0x54, 0xa3, 0x9e, 0xc3, 0x42, 0x01, 0x34, 0xb0, 0x49, 0xf4,
	0x5e, 0x83, 0xf0, 0xab, 0x55, 0x96, 0xcf, 0xc3, 0x2a, 0x62, 0x4c, 0xf3, 0x5a, 0xb4, 0xdc, 0x5f,
	0xcb, 0x7f, 0x55, 0xce, 0xea, 0xc7, 0xc4, 0x59, 0x4b, 0x98, 0x1a, 0x15, 0x91, 0x1b, 0x8b, 0xcc,
	0xab, 0x6e, 0xd6, 0x3c, 0xd6, 0x25, 0x39, 0xf0, 0xd4, 0xf1, 0x98, 0x4a, 0x77, 0x87, 0xc6, 0xd3,
	0xcd, 0xce, 0x11, 0x45, 0x01, 0xcc, 0x18, 0xdf, 0xd3, 0xf0, 0x2e, 0xcd, 0xab, 0x1a, 0xbe, 0x80,
	0x7b, 0x44, 0x1c, 0xf2, 0xf2, 0x06, 0xc3, 0x72, 0xf2, 0x61, 0x7d, 0xad, 0xfa, 0x0e, 0x9a, 0x9b,
	0xf7, 0xaf, 0xed, 0x72, 0xa7, 0x22, 0xf8, 0x4f, 0xaa, 0x55, 0x3e, 0x32, 0x49, 0xe7, 0xcb, 0xa0,
	0xb3, 0x72, 0xa9, 0xed, 0xda, 0xf9, 0x12, 0xb3, 0xb4, 0x16, 0x80, 0xa7, 0x16, 0xe8, 0xea, 0x8f,
	0x2a, 0x1c, 0xe6, 0x38, 0x2e, 0xa1, 0x90, 0x88, 0x22, 0x4a, 0xa9, 0x2e, 0x5e, 0x1f, 0x53, 0xcb,
	0xdf, 0xbb, 0xf5, 0x10, 0x1e, 0x57, 0x7b, 0xb8, 0x51, 0x19, 0x05, 0x1d, 0xed, 0x7c, 0x56, 0xf9,
	0x76, 0xb4, 0xab, 0x9c, 0x0c, 0x3c, 0xb1, 0x40, 0xe7, 0x5a, 0xa0, 0x29, 0x5d, 0x9f, 0x5f, 0xcb,
	0xdf, 0xbd, 0x75, 0x3d, 0xbd, 0x1b, 0xea, 0x31, 0xb2, 0x28, 0x58, 0x9d, 0x29, 0xc6, 0xe0, 0xfe,
	0xd6, 0xb7, 0x5f, 0x3d, 0xeb, 0xc3, 0xfa, 0x3f, 0xd3, 0x1c, 0x5d, 0xfd, 0xbc, 0x74, 0xc6, 0x68,
	0x49, 0xaf, 0x69, 0xeb, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0xcd, 0xaa, 0x9e, 0xdc, 0x04,
	0x00, 0x00,
}
