// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/distribution/v1beta1/distribution.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the set of params for the distribution module.
type Params struct {
	CommunityTax         string   `protobuf:"bytes,1,opt,name=community_tax,json=communityTax,proto3" json:"community_tax,omitempty"`
	BaseProposerReward   string   `protobuf:"bytes,2,opt,name=base_proposer_reward,json=baseProposerReward,proto3" json:"base_proposer_reward,omitempty"`
	BonusProposerReward  string   `protobuf:"bytes,3,opt,name=bonus_proposer_reward,json=bonusProposerReward,proto3" json:"bonus_proposer_reward,omitempty"`
	WithdrawAddrEnabled  bool     `protobuf:"varint,4,opt,name=withdraw_addr_enabled,json=withdrawAddrEnabled,proto3" json:"withdraw_addr_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{0}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetCommunityTax() string {
	if m != nil {
		return m.CommunityTax
	}
	return ""
}

func (m *Params) GetBaseProposerReward() string {
	if m != nil {
		return m.BaseProposerReward
	}
	return ""
}

func (m *Params) GetBonusProposerReward() string {
	if m != nil {
		return m.BonusProposerReward
	}
	return ""
}

func (m *Params) GetWithdrawAddrEnabled() bool {
	if m != nil {
		return m.WithdrawAddrEnabled
	}
	return false
}

// ValidatorHistoricalRewards represents historical rewards for a validator.
// Height is implicit within the store key.
// Cumulative reward ratio is the sum from the zeroeth period
// until this period of rewards / tokens, per the spec.
// The reference count indicates the number of objects
// which might need to reference this historical entry at any point.
// ReferenceCount =
//    number of outstanding delegations which ended the associated period (and
//    might need to read that record)
//  + number of slashes which ended the associated period (and might need to
//  read that record)
//  + one per validator for the zeroeth period, set on initialization
type ValidatorHistoricalRewards struct {
	CumulativeRewardRatio []*types.DecCoin `protobuf:"bytes,1,rep,name=cumulative_reward_ratio,json=cumulativeRewardRatio,proto3" json:"cumulative_reward_ratio,omitempty"`
	ReferenceCount        uint32           `protobuf:"varint,2,opt,name=reference_count,json=referenceCount,proto3" json:"reference_count,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *ValidatorHistoricalRewards) Reset()         { *m = ValidatorHistoricalRewards{} }
func (m *ValidatorHistoricalRewards) String() string { return proto.CompactTextString(m) }
func (*ValidatorHistoricalRewards) ProtoMessage()    {}
func (*ValidatorHistoricalRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{1}
}

func (m *ValidatorHistoricalRewards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorHistoricalRewards.Unmarshal(m, b)
}
func (m *ValidatorHistoricalRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorHistoricalRewards.Marshal(b, m, deterministic)
}
func (m *ValidatorHistoricalRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorHistoricalRewards.Merge(m, src)
}
func (m *ValidatorHistoricalRewards) XXX_Size() int {
	return xxx_messageInfo_ValidatorHistoricalRewards.Size(m)
}
func (m *ValidatorHistoricalRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorHistoricalRewards.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorHistoricalRewards proto.InternalMessageInfo

func (m *ValidatorHistoricalRewards) GetCumulativeRewardRatio() []*types.DecCoin {
	if m != nil {
		return m.CumulativeRewardRatio
	}
	return nil
}

func (m *ValidatorHistoricalRewards) GetReferenceCount() uint32 {
	if m != nil {
		return m.ReferenceCount
	}
	return 0
}

// ValidatorCurrentRewards represents current rewards and current
// period for a validator kept as a running counter and incremented
// each block as long as the validator's tokens remain constant.
type ValidatorCurrentRewards struct {
	Rewards              []*types.DecCoin `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	Period               uint64           `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ValidatorCurrentRewards) Reset()         { *m = ValidatorCurrentRewards{} }
func (m *ValidatorCurrentRewards) String() string { return proto.CompactTextString(m) }
func (*ValidatorCurrentRewards) ProtoMessage()    {}
func (*ValidatorCurrentRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{2}
}

func (m *ValidatorCurrentRewards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorCurrentRewards.Unmarshal(m, b)
}
func (m *ValidatorCurrentRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorCurrentRewards.Marshal(b, m, deterministic)
}
func (m *ValidatorCurrentRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorCurrentRewards.Merge(m, src)
}
func (m *ValidatorCurrentRewards) XXX_Size() int {
	return xxx_messageInfo_ValidatorCurrentRewards.Size(m)
}
func (m *ValidatorCurrentRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorCurrentRewards.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorCurrentRewards proto.InternalMessageInfo

func (m *ValidatorCurrentRewards) GetRewards() []*types.DecCoin {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *ValidatorCurrentRewards) GetPeriod() uint64 {
	if m != nil {
		return m.Period
	}
	return 0
}

// ValidatorAccumulatedCommission represents accumulated commission
// for a validator kept as a running counter, can be withdrawn at any time.
type ValidatorAccumulatedCommission struct {
	Commission           []*types.DecCoin `protobuf:"bytes,1,rep,name=commission,proto3" json:"commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ValidatorAccumulatedCommission) Reset()         { *m = ValidatorAccumulatedCommission{} }
func (m *ValidatorAccumulatedCommission) String() string { return proto.CompactTextString(m) }
func (*ValidatorAccumulatedCommission) ProtoMessage()    {}
func (*ValidatorAccumulatedCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{3}
}

func (m *ValidatorAccumulatedCommission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorAccumulatedCommission.Unmarshal(m, b)
}
func (m *ValidatorAccumulatedCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorAccumulatedCommission.Marshal(b, m, deterministic)
}
func (m *ValidatorAccumulatedCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorAccumulatedCommission.Merge(m, src)
}
func (m *ValidatorAccumulatedCommission) XXX_Size() int {
	return xxx_messageInfo_ValidatorAccumulatedCommission.Size(m)
}
func (m *ValidatorAccumulatedCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorAccumulatedCommission.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorAccumulatedCommission proto.InternalMessageInfo

func (m *ValidatorAccumulatedCommission) GetCommission() []*types.DecCoin {
	if m != nil {
		return m.Commission
	}
	return nil
}

// ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
// for a validator inexpensive to track, allows simple sanity checks.
type ValidatorOutstandingRewards struct {
	Rewards              []*types.DecCoin `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ValidatorOutstandingRewards) Reset()         { *m = ValidatorOutstandingRewards{} }
func (m *ValidatorOutstandingRewards) String() string { return proto.CompactTextString(m) }
func (*ValidatorOutstandingRewards) ProtoMessage()    {}
func (*ValidatorOutstandingRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{4}
}

func (m *ValidatorOutstandingRewards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorOutstandingRewards.Unmarshal(m, b)
}
func (m *ValidatorOutstandingRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorOutstandingRewards.Marshal(b, m, deterministic)
}
func (m *ValidatorOutstandingRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorOutstandingRewards.Merge(m, src)
}
func (m *ValidatorOutstandingRewards) XXX_Size() int {
	return xxx_messageInfo_ValidatorOutstandingRewards.Size(m)
}
func (m *ValidatorOutstandingRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorOutstandingRewards.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorOutstandingRewards proto.InternalMessageInfo

func (m *ValidatorOutstandingRewards) GetRewards() []*types.DecCoin {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// ValidatorSlashEvent represents a validator slash event.
// Height is implicit within the store key.
// This is needed to calculate appropriate amount of staking tokens
// for delegations which are withdrawn after a slash has occurred.
type ValidatorSlashEvent struct {
	ValidatorPeriod      uint64   `protobuf:"varint,1,opt,name=validator_period,json=validatorPeriod,proto3" json:"validator_period,omitempty"`
	Fraction             string   `protobuf:"bytes,2,opt,name=fraction,proto3" json:"fraction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorSlashEvent) Reset()         { *m = ValidatorSlashEvent{} }
func (m *ValidatorSlashEvent) String() string { return proto.CompactTextString(m) }
func (*ValidatorSlashEvent) ProtoMessage()    {}
func (*ValidatorSlashEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{5}
}

func (m *ValidatorSlashEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSlashEvent.Unmarshal(m, b)
}
func (m *ValidatorSlashEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSlashEvent.Marshal(b, m, deterministic)
}
func (m *ValidatorSlashEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSlashEvent.Merge(m, src)
}
func (m *ValidatorSlashEvent) XXX_Size() int {
	return xxx_messageInfo_ValidatorSlashEvent.Size(m)
}
func (m *ValidatorSlashEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSlashEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSlashEvent proto.InternalMessageInfo

func (m *ValidatorSlashEvent) GetValidatorPeriod() uint64 {
	if m != nil {
		return m.ValidatorPeriod
	}
	return 0
}

func (m *ValidatorSlashEvent) GetFraction() string {
	if m != nil {
		return m.Fraction
	}
	return ""
}

// ValidatorSlashEvents is a collection of ValidatorSlashEvent messages.
type ValidatorSlashEvents struct {
	ValidatorSlashEvents []*ValidatorSlashEvent `protobuf:"bytes,1,rep,name=validator_slash_events,json=validatorSlashEvents,proto3" json:"validator_slash_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ValidatorSlashEvents) Reset()         { *m = ValidatorSlashEvents{} }
func (m *ValidatorSlashEvents) String() string { return proto.CompactTextString(m) }
func (*ValidatorSlashEvents) ProtoMessage()    {}
func (*ValidatorSlashEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{6}
}

func (m *ValidatorSlashEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSlashEvents.Unmarshal(m, b)
}
func (m *ValidatorSlashEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSlashEvents.Marshal(b, m, deterministic)
}
func (m *ValidatorSlashEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSlashEvents.Merge(m, src)
}
func (m *ValidatorSlashEvents) XXX_Size() int {
	return xxx_messageInfo_ValidatorSlashEvents.Size(m)
}
func (m *ValidatorSlashEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSlashEvents.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSlashEvents proto.InternalMessageInfo

func (m *ValidatorSlashEvents) GetValidatorSlashEvents() []*ValidatorSlashEvent {
	if m != nil {
		return m.ValidatorSlashEvents
	}
	return nil
}

// FeePool is the global fee pool for distribution.
type FeePool struct {
	CommunityPool        []*types.DecCoin `protobuf:"bytes,1,rep,name=community_pool,json=communityPool,proto3" json:"community_pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FeePool) Reset()         { *m = FeePool{} }
func (m *FeePool) String() string { return proto.CompactTextString(m) }
func (*FeePool) ProtoMessage()    {}
func (*FeePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{7}
}

func (m *FeePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeePool.Unmarshal(m, b)
}
func (m *FeePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeePool.Marshal(b, m, deterministic)
}
func (m *FeePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeePool.Merge(m, src)
}
func (m *FeePool) XXX_Size() int {
	return xxx_messageInfo_FeePool.Size(m)
}
func (m *FeePool) XXX_DiscardUnknown() {
	xxx_messageInfo_FeePool.DiscardUnknown(m)
}

var xxx_messageInfo_FeePool proto.InternalMessageInfo

func (m *FeePool) GetCommunityPool() []*types.DecCoin {
	if m != nil {
		return m.CommunityPool
	}
	return nil
}

// CommunityPoolSpendProposal details a proposal for use of community funds,
// together with how many coins are proposed to be spent, and to which
// recipient account.
type CommunityPoolSpendProposal struct {
	Title                string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Recipient            string        `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount               []*types.Coin `protobuf:"bytes,4,rep,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CommunityPoolSpendProposal) Reset()         { *m = CommunityPoolSpendProposal{} }
func (m *CommunityPoolSpendProposal) String() string { return proto.CompactTextString(m) }
func (*CommunityPoolSpendProposal) ProtoMessage()    {}
func (*CommunityPoolSpendProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{8}
}

func (m *CommunityPoolSpendProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityPoolSpendProposal.Unmarshal(m, b)
}
func (m *CommunityPoolSpendProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityPoolSpendProposal.Marshal(b, m, deterministic)
}
func (m *CommunityPoolSpendProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityPoolSpendProposal.Merge(m, src)
}
func (m *CommunityPoolSpendProposal) XXX_Size() int {
	return xxx_messageInfo_CommunityPoolSpendProposal.Size(m)
}
func (m *CommunityPoolSpendProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityPoolSpendProposal.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityPoolSpendProposal proto.InternalMessageInfo

func (m *CommunityPoolSpendProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CommunityPoolSpendProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CommunityPoolSpendProposal) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *CommunityPoolSpendProposal) GetAmount() []*types.Coin {
	if m != nil {
		return m.Amount
	}
	return nil
}

// DelegatorStartingInfo represents the starting info for a delegator reward
// period. It tracks the previous validator period, the delegation's amount of
// staking token, and the creation height (to check later on if any slashes have
// occurred). NOTE: Even though validators are slashed to whole staking tokens,
// the delegators within the validator may be left with less than a full token,
// thus sdk.Dec is used.
type DelegatorStartingInfo struct {
	PreviousPeriod       uint64   `protobuf:"varint,1,opt,name=previous_period,json=previousPeriod,proto3" json:"previous_period,omitempty"`
	Stake                string   `protobuf:"bytes,2,opt,name=stake,proto3" json:"stake,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelegatorStartingInfo) Reset()         { *m = DelegatorStartingInfo{} }
func (m *DelegatorStartingInfo) String() string { return proto.CompactTextString(m) }
func (*DelegatorStartingInfo) ProtoMessage()    {}
func (*DelegatorStartingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{9}
}

func (m *DelegatorStartingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegatorStartingInfo.Unmarshal(m, b)
}
func (m *DelegatorStartingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegatorStartingInfo.Marshal(b, m, deterministic)
}
func (m *DelegatorStartingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegatorStartingInfo.Merge(m, src)
}
func (m *DelegatorStartingInfo) XXX_Size() int {
	return xxx_messageInfo_DelegatorStartingInfo.Size(m)
}
func (m *DelegatorStartingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegatorStartingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DelegatorStartingInfo proto.InternalMessageInfo

func (m *DelegatorStartingInfo) GetPreviousPeriod() uint64 {
	if m != nil {
		return m.PreviousPeriod
	}
	return 0
}

func (m *DelegatorStartingInfo) GetStake() string {
	if m != nil {
		return m.Stake
	}
	return ""
}

func (m *DelegatorStartingInfo) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

// DelegationDelegatorReward represents the properties
// of a delegator's delegation reward.
type DelegationDelegatorReward struct {
	ValidatorAddress     string           `protobuf:"bytes,1,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Reward               []*types.DecCoin `protobuf:"bytes,2,rep,name=reward,proto3" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DelegationDelegatorReward) Reset()         { *m = DelegationDelegatorReward{} }
func (m *DelegationDelegatorReward) String() string { return proto.CompactTextString(m) }
func (*DelegationDelegatorReward) ProtoMessage()    {}
func (*DelegationDelegatorReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{10}
}

func (m *DelegationDelegatorReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationDelegatorReward.Unmarshal(m, b)
}
func (m *DelegationDelegatorReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationDelegatorReward.Marshal(b, m, deterministic)
}
func (m *DelegationDelegatorReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationDelegatorReward.Merge(m, src)
}
func (m *DelegationDelegatorReward) XXX_Size() int {
	return xxx_messageInfo_DelegationDelegatorReward.Size(m)
}
func (m *DelegationDelegatorReward) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationDelegatorReward.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationDelegatorReward proto.InternalMessageInfo

func (m *DelegationDelegatorReward) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

func (m *DelegationDelegatorReward) GetReward() []*types.DecCoin {
	if m != nil {
		return m.Reward
	}
	return nil
}

// CommunityPoolSpendProposalWithDeposit defines a CommunityPoolSpendProposal
// with a deposit
type CommunityPoolSpendProposalWithDeposit struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Recipient            string   `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount               string   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Deposit              string   `protobuf:"bytes,5,opt,name=deposit,proto3" json:"deposit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommunityPoolSpendProposalWithDeposit) Reset()         { *m = CommunityPoolSpendProposalWithDeposit{} }
func (m *CommunityPoolSpendProposalWithDeposit) String() string { return proto.CompactTextString(m) }
func (*CommunityPoolSpendProposalWithDeposit) ProtoMessage()    {}
func (*CommunityPoolSpendProposalWithDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd78a31ea281a992, []int{11}
}

func (m *CommunityPoolSpendProposalWithDeposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityPoolSpendProposalWithDeposit.Unmarshal(m, b)
}
func (m *CommunityPoolSpendProposalWithDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityPoolSpendProposalWithDeposit.Marshal(b, m, deterministic)
}
func (m *CommunityPoolSpendProposalWithDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityPoolSpendProposalWithDeposit.Merge(m, src)
}
func (m *CommunityPoolSpendProposalWithDeposit) XXX_Size() int {
	return xxx_messageInfo_CommunityPoolSpendProposalWithDeposit.Size(m)
}
func (m *CommunityPoolSpendProposalWithDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityPoolSpendProposalWithDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityPoolSpendProposalWithDeposit proto.InternalMessageInfo

func (m *CommunityPoolSpendProposalWithDeposit) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CommunityPoolSpendProposalWithDeposit) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CommunityPoolSpendProposalWithDeposit) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *CommunityPoolSpendProposalWithDeposit) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *CommunityPoolSpendProposalWithDeposit) GetDeposit() string {
	if m != nil {
		return m.Deposit
	}
	return ""
}

func init() {
	proto.RegisterType((*Params)(nil), "cosmos.distribution.v1beta1.Params")
	proto.RegisterType((*ValidatorHistoricalRewards)(nil), "cosmos.distribution.v1beta1.ValidatorHistoricalRewards")
	proto.RegisterType((*ValidatorCurrentRewards)(nil), "cosmos.distribution.v1beta1.ValidatorCurrentRewards")
	proto.RegisterType((*ValidatorAccumulatedCommission)(nil), "cosmos.distribution.v1beta1.ValidatorAccumulatedCommission")
	proto.RegisterType((*ValidatorOutstandingRewards)(nil), "cosmos.distribution.v1beta1.ValidatorOutstandingRewards")
	proto.RegisterType((*ValidatorSlashEvent)(nil), "cosmos.distribution.v1beta1.ValidatorSlashEvent")
	proto.RegisterType((*ValidatorSlashEvents)(nil), "cosmos.distribution.v1beta1.ValidatorSlashEvents")
	proto.RegisterType((*FeePool)(nil), "cosmos.distribution.v1beta1.FeePool")
	proto.RegisterType((*CommunityPoolSpendProposal)(nil), "cosmos.distribution.v1beta1.CommunityPoolSpendProposal")
	proto.RegisterType((*DelegatorStartingInfo)(nil), "cosmos.distribution.v1beta1.DelegatorStartingInfo")
	proto.RegisterType((*DelegationDelegatorReward)(nil), "cosmos.distribution.v1beta1.DelegationDelegatorReward")
	proto.RegisterType((*CommunityPoolSpendProposalWithDeposit)(nil), "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit")
}

func init() {
	proto.RegisterFile("cosmos/distribution/v1beta1/distribution.proto", fileDescriptor_cd78a31ea281a992)
}

var fileDescriptor_cd78a31ea281a992 = []byte{
	// 1077 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6f, 0xe3, 0x44,
	0x14, 0x5f, 0xb7, 0x69, 0xda, 0x9d, 0xed, 0xd7, 0x4e, 0xd3, 0x36, 0xdb, 0x96, 0xba, 0x1a, 0x69,
	0x57, 0x45, 0xb0, 0xe9, 0x76, 0xf7, 0x00, 0xea, 0x01, 0xa9, 0x4e, 0x5b, 0xb1, 0x88, 0x8f, 0xca,
	0x5b, 0x40, 0xe2, 0x12, 0x4d, 0xec, 0x69, 0x32, 0xaa, 0xed, 0x31, 0x33, 0x93, 0xb4, 0x3d, 0x20,
	0x24, 0x4e, 0x5c, 0x10, 0x42, 0x5c, 0x38, 0x00, 0xea, 0x91, 0xaf, 0x3f, 0x84, 0xff, 0x00, 0x09,
	0x24, 0x23, 0x21, 0x21, 0x21, 0x8e, 0xb9, 0x71, 0x43, 0x9e, 0x19, 0xdb, 0x49, 0x36, 0xac, 0x1a,
	0xa4, 0x3d, 0x25, 0xfe, 0xcd, 0x9b, 0xf7, 0x7e, 0xef, 0xf7, 0x9e, 0xdf, 0x33, 0xa8, 0x79, 0x4c,
	0x84, 0x4c, 0xec, 0xf8, 0x54, 0x48, 0x4e, 0x9b, 0x1d, 0x49, 0x59, 0xb4, 0xd3, 0xdd, 0x6d, 0x12,
	0x89, 0x77, 0x07, 0xc0, 0x5a, 0xcc, 0x99, 0x64, 0x70, 0x5d, 0xdb, 0xd7, 0x06, 0x8e, 0x8c, 0xfd,
	0x5a, 0xa5, 0xc5, 0x5a, 0x4c, 0xd9, 0xed, 0xa4, 0xff, 0xf4, 0x95, 0xb5, 0x4d, 0x13, 0xa2, 0x89,
	0x05, 0xc9, 0x5d, 0x7b, 0x8c, 0x1a, 0x97, 0xe8, 0x97, 0x49, 0x50, 0x3e, 0xc6, 0x1c, 0x87, 0x02,
	0x9e, 0x81, 0x39, 0x8f, 0x85, 0x61, 0x27, 0xa2, 0xf2, 0xb2, 0x21, 0xf1, 0x45, 0xd5, 0xda, 0xb2,
	0xb6, 0x6f, 0x3a, 0x47, 0x3f, 0x27, 0xf6, 0x8d, 0x5f, 0x13, 0xfb, 0x5e, 0x8b, 0xca, 0x76, 0xa7,
	0x59, 0xf3, 0x58, 0xb8, 0x63, 0x9c, 0xea, 0x9f, 0xfb, 0xc2, 0x3f, 0xdb, 0x91, 0x97, 0x31, 0x11,
	0xb5, 0x03, 0xe2, 0xf5, 0x12, 0xbb, 0x72, 0x89, 0xc3, 0x60, 0x0f, 0x0d, 0x38, 0x43, 0xee, 0x6c,
	0xfe, 0x7c, 0x82, 0x2f, 0xe0, 0xc7, 0xa0, 0x92, 0x52, 0x6a, 0xc4, 0x9c, 0xc5, 0x4c, 0x10, 0xde,
	0xe0, 0xe4, 0x1c, 0x73, 0xbf, 0x3a, 0xa1, 0x62, 0xbe, 0x35, 0x76, 0xcc, 0x75, 0x1d, 0x73, 0x94,
	0x4f, 0xe4, 0xc2, 0x14, 0x3e, 0x36, 0xa8, 0xab, 0x40, 0xf8, 0x89, 0x05, 0x96, 0x9b, 0x2c, 0xea,
	0x88, 0xa7, 0x28, 0x4c, 0x2a, 0x0a, 0x6f, 0x8f, 0x4d, 0x61, 0xc3, 0x50, 0x18, 0xe5, 0x14, 0xb9,
	0x4b, 0x0a, 0x1f, 0x22, 0x71, 0x02, 0x96, 0xcf, 0xa9, 0x6c, 0xfb, 0x1c, 0x9f, 0x37, 0xb0, 0xef,
	0xf3, 0x06, 0x89, 0x70, 0x33, 0x20, 0x7e, 0xb5, 0xb4, 0x65, 0x6d, 0xcf, 0x38, 0x5b, 0x85, 0xd7,
	0x91, 0x66, 0xc8, 0x5d, 0xca, 0xf0, 0x7d, 0xdf, 0xe7, 0x87, 0x1a, 0xdd, 0x2b, 0x7d, 0x75, 0x65,
	0xdf, 0x40, 0x9f, 0x4f, 0x80, 0xb5, 0xf7, 0x70, 0x40, 0x7d, 0x2c, 0x19, 0x7f, 0x9d, 0x0a, 0xc9,
	0x38, 0xf5, 0x70, 0xa0, 0x23, 0x0b, 0xf8, 0xa3, 0x05, 0x56, 0xbd, 0x4e, 0xd8, 0x09, 0xb0, 0xa4,
	0x5d, 0x62, 0x68, 0x36, 0x38, 0x96, 0x94, 0x55, 0xad, 0xad, 0xc9, 0xed, 0x5b, 0x0f, 0x37, 0x4c,
	0x7b, 0xd6, 0x52, 0xf5, 0xb2, 0x36, 0x4b, 0x73, 0xad, 0x33, 0x1a, 0x39, 0xef, 0xa6, 0xfa, 0xf4,
	0x12, 0x7b, 0xd3, 0x14, 0x7b, 0xb4, 0x2b, 0xf4, 0xc3, 0xef, 0xf6, 0x4b, 0xd7, 0x53, 0x30, 0xf5,
	0x2a, 0xdc, 0xe5, 0xc2, 0x91, 0x66, 0xea, 0xa6, 0x6e, 0x60, 0x1d, 0x2c, 0x70, 0x72, 0x4a, 0x38,
	0x89, 0x3c, 0xd2, 0xf0, 0x58, 0x27, 0x92, 0xaa, 0x53, 0xe6, 0x9c, 0xb5, 0x5e, 0x62, 0xaf, 0x68,
	0x0a, 0x43, 0x06, 0xc8, 0x9d, 0xcf, 0x91, 0xba, 0x02, 0xbe, 0xb5, 0xc0, 0x6a, 0xae, 0x48, 0xbd,
	0xc3, 0x39, 0x89, 0x64, 0x26, 0xc7, 0x19, 0x98, 0xd6, 0xbc, 0xc5, 0xb5, 0xb2, 0x7f, 0x94, 0x66,
	0x3f, 0x6e, 0x6e, 0x59, 0x04, 0xb8, 0x02, 0xca, 0x31, 0xe1, 0x94, 0xe9, 0x76, 0x2f, 0xb9, 0xe6,
	0x09, 0x7d, 0x69, 0x81, 0xcd, 0x9c, 0xe0, 0xbe, 0x67, 0xa4, 0x20, 0x7e, 0x9d, 0x85, 0x21, 0x15,
	0x82, 0xb2, 0x08, 0x7e, 0x08, 0x80, 0x97, 0x3f, 0x3d, 0x3f, 0xaa, 0x7d, 0x41, 0xd0, 0xd7, 0x16,
	0x58, 0xcf, 0x59, 0xbd, 0xd3, 0x91, 0x42, 0xe2, 0xc8, 0xa7, 0x51, 0x2b, 0x93, 0xee, 0xa3, 0xf1,
	0xa4, 0x3b, 0x34, 0x8d, 0x33, 0x9f, 0x55, 0x4d, 0x5d, 0x45, 0xff, 0x57, 0x4c, 0xf4, 0xbd, 0x05,
	0x96, 0x72, 0x7a, 0x4f, 0x02, 0x2c, 0xda, 0x87, 0x5d, 0x12, 0x49, 0x78, 0x04, 0x16, 0xbb, 0x19,
	0xdc, 0x30, 0x72, 0xa7, 0x13, 0xad, 0xe4, 0xac, 0xf7, 0x12, 0x7b, 0x55, 0x47, 0x1f, 0xb6, 0x40,
	0xee, 0x42, 0x0e, 0x1d, 0x2b, 0x04, 0xbe, 0x01, 0x66, 0x4e, 0x39, 0xf6, 0xd2, 0x59, 0x6b, 0xa6,
	0x53, 0x6d, 0xbc, 0xd1, 0xe0, 0xe6, 0xf7, 0xd1, 0x4f, 0x16, 0xa8, 0x8c, 0xe0, 0x2a, 0xe0, 0x67,
	0x16, 0x58, 0x29, 0xb8, 0x88, 0xf4, 0xa4, 0x41, 0xd4, 0x91, 0xd1, 0xf4, 0x41, 0xed, 0x19, 0xb3,
	0xbf, 0x36, 0xc2, 0xa7, 0x73, 0xd7, 0xe8, 0xfc, 0xc2, 0x70, 0xa6, 0xfd, 0xde, 0x91, 0x5b, 0xe9,
	0x8e, 0xe0, 0x63, 0x46, 0xc8, 0x37, 0x16, 0x98, 0x3e, 0x22, 0xe4, 0x98, 0xb1, 0x00, 0x7e, 0x61,
	0x81, 0xf9, 0x62, 0xa2, 0xc7, 0x8c, 0x05, 0xd7, 0xaa, 0xf6, 0x9b, 0x86, 0xc5, 0xf2, 0xf0, 0x4e,
	0x48, 0x3d, 0x8c, 0x5d, 0xf4, 0x62, 0x41, 0xa5, 0x9c, 0xd0, 0x9f, 0x16, 0x58, 0xab, 0xf7, 0x23,
	0x4f, 0x62, 0x12, 0xf9, 0x7a, 0xc6, 0xe2, 0x00, 0x56, 0xc0, 0x94, 0xa4, 0x32, 0x20, 0x7a, 0x91,
	0xb9, 0xfa, 0x01, 0x6e, 0x81, 0x5b, 0x3e, 0x11, 0x1e, 0xa7, 0x71, 0x51, 0x52, 0xb7, 0x1f, 0x82,
	0x1b, 0xe0, 0x26, 0x27, 0x1e, 0x8d, 0x29, 0x89, 0xa4, 0xde, 0x06, 0x6e, 0x01, 0x40, 0x0f, 0x94,
	0x71, 0xa8, 0x26, 0x50, 0x49, 0xe5, 0x7f, 0x67, 0x64, 0xfe, 0x2a, 0xf9, 0x07, 0xe6, 0xd5, 0xdb,
	0xbe, 0x46, 0x8e, 0x3a, 0x41, 0xe3, 0x7a, 0x6f, 0xf6, 0xd3, 0x2b, 0xfb, 0x46, 0x5a, 0x83, 0xbf,
	0xd2, 0x3a, 0xfc, 0x63, 0x81, 0xe5, 0x03, 0x12, 0x90, 0x96, 0x2a, 0x93, 0xc4, 0x5c, 0xd2, 0xa8,
	0xf5, 0x38, 0x3a, 0x55, 0x73, 0x31, 0xe6, 0xa4, 0x4b, 0x59, 0xba, 0x72, 0xfa, 0x7b, 0xbc, 0x6f,
	0x2e, 0x0e, 0x19, 0x20, 0x77, 0x3e, 0x43, 0x4c, 0x87, 0x9f, 0x80, 0x29, 0x21, 0xf1, 0x19, 0x31,
	0xed, 0xfd, 0xda, 0xd8, 0x9b, 0x6f, 0x56, 0x07, 0x52, 0x4e, 0x90, 0xab, 0x9d, 0xc1, 0x43, 0x50,
	0x6e, 0x13, 0xda, 0x6a, 0x6b, 0x09, 0x4b, 0xce, 0xfd, 0xbf, 0x13, 0x7b, 0xc1, 0xe3, 0x24, 0x9d,
	0xe7, 0x51, 0x43, 0x1f, 0x15, 0x24, 0x87, 0x0e, 0x90, 0x6b, 0x2e, 0xa3, 0xdf, 0x2c, 0x70, 0xc7,
	0xe4, 0x4e, 0x59, 0x94, 0xab, 0x60, 0x16, 0xe8, 0x63, 0x70, 0xbb, 0x68, 0xec, 0x74, 0x35, 0x12,
	0x21, 0xcc, 0x77, 0xcb, 0x46, 0x2f, 0xb1, 0xab, 0xc3, 0xbd, 0x6f, 0x4c, 0x90, 0x5b, 0xcc, 0x86,
	0x7d, 0x0d, 0x41, 0x0a, 0xca, 0xf9, 0x37, 0xc8, 0x73, 0x9a, 0xaa, 0x26, 0xc0, 0xde, 0x8c, 0xa9,
	0xae, 0x85, 0xae, 0x26, 0xc0, 0xdd, 0xff, 0xee, 0xe0, 0xf7, 0xa9, 0x6c, 0x1f, 0x90, 0x98, 0x09,
	0x2a, 0xe1, 0xbd, 0x81, 0x66, 0x76, 0x16, 0x0b, 0xd9, 0x15, 0x8c, 0xb2, 0xf6, 0x7e, 0x75, 0x44,
	0x7b, 0x3b, 0x2b, 0xbd, 0xc4, 0x86, 0xda, 0xba, 0xef, 0x10, 0x0d, 0xb6, 0xfd, 0xc3, 0xa7, 0xda,
	0xde, 0xa9, 0xf4, 0x12, 0x7b, 0x31, 0x9b, 0xd3, 0xe6, 0x08, 0xf5, 0xbf, 0x0c, 0x2f, 0xf6, 0xbd,
	0x0c, 0xe9, 0x85, 0xdb, 0xbd, 0xc4, 0x9e, 0xd3, 0x17, 0x34, 0x8e, 0xb2, 0x96, 0x86, 0x2f, 0x83,
	0x69, 0x5f, 0xe7, 0x52, 0x9d, 0x52, 0xb6, 0xb0, 0x58, 0x02, 0xe6, 0x00, 0xb9, 0x99, 0x49, 0x21,
	0x91, 0xf3, 0xca, 0x77, 0x7f, 0x6c, 0x5a, 0x1f, 0xec, 0x3e, 0x53, 0xe7, 0x8b, 0xc1, 0x4f, 0x68,
	0x25, 0x7b, 0xb3, 0xac, 0xbe, 0x70, 0x1f, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x13, 0xcc, 0xc8,
	0x14, 0x66, 0x0b, 0x00, 0x00,
}
