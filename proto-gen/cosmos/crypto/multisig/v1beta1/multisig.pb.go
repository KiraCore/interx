// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/crypto/multisig/v1beta1/multisig.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MultiSignature wraps the signatures from a multisig.LegacyAminoPubKey.
// See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers
// signed and with which modes.
type MultiSignature struct {
	Signatures           [][]byte `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiSignature) Reset()         { *m = MultiSignature{} }
func (m *MultiSignature) String() string { return proto.CompactTextString(m) }
func (*MultiSignature) ProtoMessage()    {}
func (*MultiSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1177bdf7025769be, []int{0}
}

func (m *MultiSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiSignature.Unmarshal(m, b)
}
func (m *MultiSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiSignature.Marshal(b, m, deterministic)
}
func (m *MultiSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiSignature.Merge(m, src)
}
func (m *MultiSignature) XXX_Size() int {
	return xxx_messageInfo_MultiSignature.Size(m)
}
func (m *MultiSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiSignature.DiscardUnknown(m)
}

var xxx_messageInfo_MultiSignature proto.InternalMessageInfo

func (m *MultiSignature) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// CompactBitArray is an implementation of a space efficient bit array.
// This is used to ensure that the encoded data takes up a minimal amount of
// space after proto encoding.
// This is not thread safe, and is not intended for concurrent usage.
type CompactBitArray struct {
	ExtraBitsStored      uint32   `protobuf:"varint,1,opt,name=extra_bits_stored,json=extraBitsStored,proto3" json:"extra_bits_stored,omitempty"`
	Elems                []byte   `protobuf:"bytes,2,opt,name=elems,proto3" json:"elems,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompactBitArray) Reset()         { *m = CompactBitArray{} }
func (m *CompactBitArray) String() string { return proto.CompactTextString(m) }
func (*CompactBitArray) ProtoMessage()    {}
func (*CompactBitArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_1177bdf7025769be, []int{1}
}

func (m *CompactBitArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactBitArray.Unmarshal(m, b)
}
func (m *CompactBitArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactBitArray.Marshal(b, m, deterministic)
}
func (m *CompactBitArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactBitArray.Merge(m, src)
}
func (m *CompactBitArray) XXX_Size() int {
	return xxx_messageInfo_CompactBitArray.Size(m)
}
func (m *CompactBitArray) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactBitArray.DiscardUnknown(m)
}

var xxx_messageInfo_CompactBitArray proto.InternalMessageInfo

func (m *CompactBitArray) GetExtraBitsStored() uint32 {
	if m != nil {
		return m.ExtraBitsStored
	}
	return 0
}

func (m *CompactBitArray) GetElems() []byte {
	if m != nil {
		return m.Elems
	}
	return nil
}

func init() {
	proto.RegisterType((*MultiSignature)(nil), "cosmos.crypto.multisig.v1beta1.MultiSignature")
	proto.RegisterType((*CompactBitArray)(nil), "cosmos.crypto.multisig.v1beta1.CompactBitArray")
}

func init() {
	proto.RegisterFile("cosmos/crypto/multisig/v1beta1/multisig.proto", fileDescriptor_1177bdf7025769be)
}

var fileDescriptor_1177bdf7025769be = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x31, 0x14, 0x06, 0xab, 0x50, 0x11, 0x75, 0x88, 0x18, 0xda, 0xa8, 0x53, 0x00, 0x35,
	0x56, 0x85, 0xc4, 0xd0, 0x8d, 0x30, 0xb3, 0xa4, 0x13, 0x2c, 0x95, 0x93, 0x5a, 0xc6, 0xa2, 0xe6,
	0x2c, 0xdf, 0x05, 0x91, 0x7f, 0xc2, 0x08, 0xff, 0x88, 0x9f, 0x84, 0x6a, 0x93, 0xaa, 0xd3, 0xdd,
	0x7b, 0xef, 0xbb, 0xe1, 0x1e, 0x9f, 0x37, 0x80, 0x16, 0x50, 0x34, 0xbe, 0x73, 0x04, 0xc2, 0xb6,
	0x5b, 0x32, 0x68, 0xb4, 0xf8, 0x58, 0xd4, 0x8a, 0xe4, 0x62, 0x6f, 0x14, 0xce, 0x03, 0x41, 0x32,
	0x89, 0x78, 0x11, 0xf1, 0x62, 0x9f, 0xfe, 0xe3, 0x57, 0x63, 0x0d, 0x1a, 0x02, 0x2a, 0x76, 0x5b,
	0xbc, 0x9a, 0xdd, 0xf3, 0x8b, 0xa7, 0x1d, 0xb9, 0x32, 0xfa, 0x5d, 0x52, 0xeb, 0x55, 0x32, 0xe1,
	0x1c, 0x7b, 0x81, 0x29, 0xcb, 0x4e, 0xf2, 0x61, 0x75, 0xe0, 0x2c, 0x07, 0xbf, 0x3f, 0x53, 0x36,
	0x7b, 0xe6, 0xa3, 0x47, 0xb0, 0x4e, 0x36, 0x54, 0x1a, 0x7a, 0xf0, 0x5e, 0x76, 0xc9, 0x0d, 0xbf,
	0x54, 0x9f, 0xe4, 0xe5, 0xba, 0x36, 0x84, 0x6b, 0x24, 0xf0, 0x6a, 0x93, 0xb2, 0x8c, 0xe5, 0xe7,
	0xd5, 0x28, 0x04, 0xa5, 0x21, 0x5c, 0x05, 0x3b, 0x19, 0xf3, 0x53, 0xb5, 0x55, 0x16, 0xd3, 0xe3,
	0x8c, 0xe5, 0xc3, 0x2a, 0x8a, 0xe5, 0xe0, 0xeb, 0x7b, 0x7a, 0x54, 0xde, 0xbe, 0x5c, 0x6b, 0x43,
	0xaf, 0x6d, 0x5d, 0x34, 0x60, 0x45, 0x5f, 0x42, 0x18, 0x73, 0xdc, 0xbc, 0xf5, 0x7d, 0x50, 0xe7,
	0x14, 0xd6, 0x67, 0xe1, 0x8d, 0xbb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x3b, 0xc0, 0x20,
	0x2d, 0x01, 0x00, 0x00,
}
