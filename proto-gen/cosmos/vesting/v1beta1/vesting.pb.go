// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/vesting/v1beta1/vesting.proto

package types

import (
	fmt "fmt"
	types1 "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/x/auth/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BaseVestingAccount implements the VestingAccount interface. It contains all
// the necessary fields needed for any vesting account implementation.
type BaseVestingAccount struct {
	BaseAccount          *types.BaseAccount `protobuf:"bytes,1,opt,name=base_account,json=baseAccount,proto3" json:"base_account,omitempty"`
	OriginalVesting      []*types1.Coin     `protobuf:"bytes,2,rep,name=original_vesting,json=originalVesting,proto3" json:"original_vesting,omitempty"`
	DelegatedFree        []*types1.Coin     `protobuf:"bytes,3,rep,name=delegated_free,json=delegatedFree,proto3" json:"delegated_free,omitempty"`
	DelegatedVesting     []*types1.Coin     `protobuf:"bytes,4,rep,name=delegated_vesting,json=delegatedVesting,proto3" json:"delegated_vesting,omitempty"`
	EndTime              int64              `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BaseVestingAccount) Reset()         { *m = BaseVestingAccount{} }
func (m *BaseVestingAccount) String() string { return proto.CompactTextString(m) }
func (*BaseVestingAccount) ProtoMessage()    {}
func (*BaseVestingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{0}
}

func (m *BaseVestingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseVestingAccount.Unmarshal(m, b)
}
func (m *BaseVestingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseVestingAccount.Marshal(b, m, deterministic)
}
func (m *BaseVestingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseVestingAccount.Merge(m, src)
}
func (m *BaseVestingAccount) XXX_Size() int {
	return xxx_messageInfo_BaseVestingAccount.Size(m)
}
func (m *BaseVestingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseVestingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BaseVestingAccount proto.InternalMessageInfo

func (m *BaseVestingAccount) GetBaseAccount() *types.BaseAccount {
	if m != nil {
		return m.BaseAccount
	}
	return nil
}

func (m *BaseVestingAccount) GetOriginalVesting() []*types1.Coin {
	if m != nil {
		return m.OriginalVesting
	}
	return nil
}

func (m *BaseVestingAccount) GetDelegatedFree() []*types1.Coin {
	if m != nil {
		return m.DelegatedFree
	}
	return nil
}

func (m *BaseVestingAccount) GetDelegatedVesting() []*types1.Coin {
	if m != nil {
		return m.DelegatedVesting
	}
	return nil
}

func (m *BaseVestingAccount) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// ContinuousVestingAccount implements the VestingAccount interface. It
// continuously vests by unlocking coins linearly with respect to time.
type ContinuousVestingAccount struct {
	BaseVestingAccount   *BaseVestingAccount `protobuf:"bytes,1,opt,name=base_vesting_account,json=baseVestingAccount,proto3" json:"base_vesting_account,omitempty"`
	StartTime            int64               `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ContinuousVestingAccount) Reset()         { *m = ContinuousVestingAccount{} }
func (m *ContinuousVestingAccount) String() string { return proto.CompactTextString(m) }
func (*ContinuousVestingAccount) ProtoMessage()    {}
func (*ContinuousVestingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{1}
}

func (m *ContinuousVestingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuousVestingAccount.Unmarshal(m, b)
}
func (m *ContinuousVestingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuousVestingAccount.Marshal(b, m, deterministic)
}
func (m *ContinuousVestingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuousVestingAccount.Merge(m, src)
}
func (m *ContinuousVestingAccount) XXX_Size() int {
	return xxx_messageInfo_ContinuousVestingAccount.Size(m)
}
func (m *ContinuousVestingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuousVestingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuousVestingAccount proto.InternalMessageInfo

func (m *ContinuousVestingAccount) GetBaseVestingAccount() *BaseVestingAccount {
	if m != nil {
		return m.BaseVestingAccount
	}
	return nil
}

func (m *ContinuousVestingAccount) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

// DelayedVestingAccount implements the VestingAccount interface. It vests all
// coins after a specific time, but non prior. In other words, it keeps them
// locked until a specified time.
type DelayedVestingAccount struct {
	BaseVestingAccount   *BaseVestingAccount `protobuf:"bytes,1,opt,name=base_vesting_account,json=baseVestingAccount,proto3" json:"base_vesting_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DelayedVestingAccount) Reset()         { *m = DelayedVestingAccount{} }
func (m *DelayedVestingAccount) String() string { return proto.CompactTextString(m) }
func (*DelayedVestingAccount) ProtoMessage()    {}
func (*DelayedVestingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{2}
}

func (m *DelayedVestingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelayedVestingAccount.Unmarshal(m, b)
}
func (m *DelayedVestingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelayedVestingAccount.Marshal(b, m, deterministic)
}
func (m *DelayedVestingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelayedVestingAccount.Merge(m, src)
}
func (m *DelayedVestingAccount) XXX_Size() int {
	return xxx_messageInfo_DelayedVestingAccount.Size(m)
}
func (m *DelayedVestingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_DelayedVestingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_DelayedVestingAccount proto.InternalMessageInfo

func (m *DelayedVestingAccount) GetBaseVestingAccount() *BaseVestingAccount {
	if m != nil {
		return m.BaseVestingAccount
	}
	return nil
}

// Period defines a length of time and amount of coins that will vest.
type Period struct {
	Length               int64          `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Amount               []*types1.Coin `protobuf:"bytes,2,rep,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Period) Reset()         { *m = Period{} }
func (m *Period) String() string { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()    {}
func (*Period) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{3}
}

func (m *Period) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Period.Unmarshal(m, b)
}
func (m *Period) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Period.Marshal(b, m, deterministic)
}
func (m *Period) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Period.Merge(m, src)
}
func (m *Period) XXX_Size() int {
	return xxx_messageInfo_Period.Size(m)
}
func (m *Period) XXX_DiscardUnknown() {
	xxx_messageInfo_Period.DiscardUnknown(m)
}

var xxx_messageInfo_Period proto.InternalMessageInfo

func (m *Period) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Period) GetAmount() []*types1.Coin {
	if m != nil {
		return m.Amount
	}
	return nil
}

// PeriodicVestingAccount implements the VestingAccount interface. It
// periodically vests by unlocking coins during each specified period.
type PeriodicVestingAccount struct {
	BaseVestingAccount   *BaseVestingAccount `protobuf:"bytes,1,opt,name=base_vesting_account,json=baseVestingAccount,proto3" json:"base_vesting_account,omitempty"`
	StartTime            int64               `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	VestingPeriods       []*Period           `protobuf:"bytes,3,rep,name=vesting_periods,json=vestingPeriods,proto3" json:"vesting_periods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PeriodicVestingAccount) Reset()         { *m = PeriodicVestingAccount{} }
func (m *PeriodicVestingAccount) String() string { return proto.CompactTextString(m) }
func (*PeriodicVestingAccount) ProtoMessage()    {}
func (*PeriodicVestingAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{4}
}

func (m *PeriodicVestingAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodicVestingAccount.Unmarshal(m, b)
}
func (m *PeriodicVestingAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodicVestingAccount.Marshal(b, m, deterministic)
}
func (m *PeriodicVestingAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodicVestingAccount.Merge(m, src)
}
func (m *PeriodicVestingAccount) XXX_Size() int {
	return xxx_messageInfo_PeriodicVestingAccount.Size(m)
}
func (m *PeriodicVestingAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodicVestingAccount.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodicVestingAccount proto.InternalMessageInfo

func (m *PeriodicVestingAccount) GetBaseVestingAccount() *BaseVestingAccount {
	if m != nil {
		return m.BaseVestingAccount
	}
	return nil
}

func (m *PeriodicVestingAccount) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PeriodicVestingAccount) GetVestingPeriods() []*Period {
	if m != nil {
		return m.VestingPeriods
	}
	return nil
}

// PermanentLockedAccount implements the VestingAccount interface. It does
// not ever release coins, locking them indefinitely. Coins in this account can
// still be used for delegating and for governance votes even while locked.
//
// Since: cosmos-sdk 0.43
type PermanentLockedAccount struct {
	BaseVestingAccount   *BaseVestingAccount `protobuf:"bytes,1,opt,name=base_vesting_account,json=baseVestingAccount,proto3" json:"base_vesting_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PermanentLockedAccount) Reset()         { *m = PermanentLockedAccount{} }
func (m *PermanentLockedAccount) String() string { return proto.CompactTextString(m) }
func (*PermanentLockedAccount) ProtoMessage()    {}
func (*PermanentLockedAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_89e80273ca606d6e, []int{5}
}

func (m *PermanentLockedAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermanentLockedAccount.Unmarshal(m, b)
}
func (m *PermanentLockedAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermanentLockedAccount.Marshal(b, m, deterministic)
}
func (m *PermanentLockedAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermanentLockedAccount.Merge(m, src)
}
func (m *PermanentLockedAccount) XXX_Size() int {
	return xxx_messageInfo_PermanentLockedAccount.Size(m)
}
func (m *PermanentLockedAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_PermanentLockedAccount.DiscardUnknown(m)
}

var xxx_messageInfo_PermanentLockedAccount proto.InternalMessageInfo

func (m *PermanentLockedAccount) GetBaseVestingAccount() *BaseVestingAccount {
	if m != nil {
		return m.BaseVestingAccount
	}
	return nil
}

func init() {
	proto.RegisterType((*BaseVestingAccount)(nil), "cosmos.vesting.v1beta1.BaseVestingAccount")
	proto.RegisterType((*ContinuousVestingAccount)(nil), "cosmos.vesting.v1beta1.ContinuousVestingAccount")
	proto.RegisterType((*DelayedVestingAccount)(nil), "cosmos.vesting.v1beta1.DelayedVestingAccount")
	proto.RegisterType((*Period)(nil), "cosmos.vesting.v1beta1.Period")
	proto.RegisterType((*PeriodicVestingAccount)(nil), "cosmos.vesting.v1beta1.PeriodicVestingAccount")
	proto.RegisterType((*PermanentLockedAccount)(nil), "cosmos.vesting.v1beta1.PermanentLockedAccount")
}

func init() {
	proto.RegisterFile("cosmos/vesting/v1beta1/vesting.proto", fileDescriptor_89e80273ca606d6e)
}

var fileDescriptor_89e80273ca606d6e = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0x41, 0x6f, 0xd3, 0x3c,
	0x18, 0xc7, 0xeb, 0xb6, 0x6f, 0xdf, 0xe1, 0xc2, 0xba, 0x85, 0xb5, 0x84, 0x1d, 0x9a, 0x2a, 0xe2,
	0x50, 0x21, 0x91, 0xd2, 0x8d, 0x53, 0x6f, 0x64, 0x08, 0x69, 0x62, 0x07, 0x14, 0x21, 0x0e, 0x5c,
	0x2a, 0x27, 0x31, 0xa9, 0xb5, 0xc6, 0xae, 0x62, 0x77, 0xa2, 0x1f, 0x00, 0x84, 0xb4, 0x13, 0x12,
	0x07, 0x8e, 0xbb, 0x70, 0xe1, 0x43, 0x70, 0xe6, 0x88, 0xf8, 0x00, 0xe1, 0x3b, 0xf4, 0x13, 0xa0,
	0xd8, 0x4e, 0x3a, 0x32, 0xa0, 0x1a, 0x07, 0x10, 0xa7, 0xd6, 0x79, 0x9e, 0xe7, 0xef, 0xdf, 0xf3,
	0xf8, 0x6f, 0x19, 0xde, 0x0a, 0x18, 0x8f, 0x19, 0x1f, 0x9c, 0x60, 0x2e, 0x08, 0x8d, 0x06, 0x27,
	0x43, 0x1f, 0x0b, 0x34, 0xcc, 0xd7, 0xce, 0x2c, 0x61, 0x82, 0x19, 0x1d, 0x95, 0xe5, 0xe4, 0x5f,
	0x75, 0xd6, 0xee, 0x4e, 0xc4, 0x22, 0x26, 0x53, 0x06, 0xd9, 0x3f, 0x95, 0xbd, 0xdb, 0xd5, 0x9a,
	0x3e, 0xe2, 0xb8, 0x10, 0x0c, 0x18, 0xa1, 0xa5, 0x38, 0x9a, 0x8b, 0x49, 0x11, 0xcf, 0x16, 0x2a,
	0x6e, 0x7f, 0xa9, 0x43, 0xc3, 0x45, 0x1c, 0x3f, 0x55, 0xbb, 0xdd, 0x0f, 0x02, 0x36, 0xa7, 0xc2,
	0x38, 0x84, 0x57, 0x33, 0xc5, 0x31, 0x52, 0x6b, 0x13, 0xf4, 0x40, 0xbf, 0xb9, 0xd7, 0x73, 0x34,
	0x9b, 0x14, 0xd0, 0x6a, 0x4e, 0x56, 0xae, 0xeb, 0xdc, 0xfa, 0xe7, 0xd4, 0x02, 0x5e, 0xd3, 0x5f,
	0x7d, 0x32, 0xde, 0x00, 0xb8, 0xc5, 0x12, 0x12, 0x11, 0x8a, 0xa6, 0x63, 0xdd, 0x94, 0x59, 0xed,
	0xd5, 0xfa, 0xcd, 0xbd, 0x9b, 0xb9, 0x5e, 0x96, 0x5f, 0xe8, 0x1d, 0x30, 0x42, 0xdd, 0x47, 0x9f,
	0x52, 0xab, 0xb2, 0x4c, 0xad, 0x1b, 0x0b, 0x14, 0x4f, 0x47, 0x76, 0x59, 0xc0, 0xfe, 0xf0, 0xd5,
	0xea, 0x47, 0x44, 0x4c, 0xe6, 0xbe, 0x13, 0xb0, 0x78, 0xa0, 0xbb, 0x54, 0x3f, 0x77, 0x78, 0x78,
	0x3c, 0x10, 0x8b, 0x19, 0xe6, 0x52, 0x8b, 0x7b, 0xad, 0xbc, 0x5c, 0x77, 0x69, 0x9c, 0x02, 0xb8,
	0x19, 0xe2, 0x29, 0x8e, 0x90, 0xc0, 0xe1, 0xf8, 0x79, 0x82, 0xb1, 0x59, 0x5b, 0x47, 0x74, 0xa8,
	0x89, 0xda, 0x8a, 0xe8, 0xfb, 0xf2, 0xcb, 0xf1, 0x5c, 0x2b, 0x8a, 0x1f, 0x26, 0x18, 0x1b, 0x6f,
	0x01, 0xdc, 0x5e, 0xc9, 0xe5, 0x23, 0xaa, 0xaf, 0x03, 0x3a, 0xd2, 0x40, 0x66, 0x19, 0xe8, 0xb7,
	0x66, 0xb4, 0x55, 0xd4, 0xe7, 0x43, 0x72, 0xe0, 0x06, 0xa6, 0xe1, 0x58, 0x90, 0x18, 0x9b, 0xff,
	0xf5, 0x40, 0xbf, 0xe6, 0x5e, 0x5f, 0xa6, 0x56, 0x4b, 0xed, 0x96, 0x47, 0x6c, 0xef, 0x7f, 0x4c,
	0xc3, 0x27, 0x24, 0xc6, 0xa3, 0x8d, 0xd7, 0x67, 0x56, 0xe5, 0xdd, 0x99, 0x55, 0xb1, 0x3f, 0x02,
	0x68, 0x1e, 0x30, 0x2a, 0x08, 0x9d, 0xb3, 0x39, 0x2f, 0x59, 0xcb, 0x87, 0x3b, 0xd2, 0x5a, 0x9a,
	0xb2, 0x64, 0xb1, 0xdb, 0xce, 0x8f, 0xed, 0xef, 0x5c, 0x34, 0xa9, 0x36, 0x9b, 0xe1, 0x5f, 0xb4,
	0xef, 0x3d, 0x08, 0xb9, 0x40, 0x89, 0x50, 0xf0, 0x55, 0x09, 0xdf, 0x5e, 0xa6, 0xd6, 0xb6, 0x82,
	0x5f, 0xc5, 0x6c, 0xef, 0x8a, 0x5c, 0x94, 0x1a, 0x78, 0x09, 0x60, 0xfb, 0x01, 0x9e, 0xa2, 0x45,
	0x31, 0x8d, 0x3f, 0x48, 0x7f, 0x8e, 0xe3, 0x14, 0xc0, 0xc6, 0x63, 0x9c, 0x10, 0x16, 0x1a, 0x1d,
	0xd8, 0x98, 0x62, 0x1a, 0x89, 0x89, 0xdc, 0xaa, 0xe6, 0xe9, 0x95, 0x11, 0xc0, 0x06, 0x8a, 0x25,
	0xc2, 0xda, 0x3b, 0x75, 0x37, 0x33, 0xcc, 0xa5, 0x4c, 0xa1, 0xa5, 0x47, 0x75, 0x49, 0xf3, 0xbe,
	0x0a, 0x3b, 0x8a, 0x86, 0x04, 0xff, 0xca, 0xa1, 0x1a, 0x11, 0x6c, 0xe5, 0x50, 0x33, 0xc9, 0xce,
	0xf5, 0x55, 0xef, 0xfe, 0x0c, 0x4a, 0xb5, 0xe8, 0x76, 0xf5, 0xf5, 0xea, 0x28, 0xf9, 0x92, 0x88,
	0xed, 0x6d, 0xea, 0x2f, 0x2a, 0x9d, 0x9f, 0x3b, 0xb5, 0x57, 0x40, 0xce, 0x29, 0x46, 0x14, 0x53,
	0x71, 0xc4, 0x82, 0x63, 0x1c, 0xfe, 0x15, 0xfb, 0xb8, 0xfb, 0xcf, 0x86, 0xbf, 0x3c, 0xea, 0x17,
	0xfa, 0x59, 0xd0, 0xef, 0x91, 0x3c, 0x79, 0xbf, 0x21, 0x1f, 0x86, 0xfd, 0x6f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x1c, 0xb8, 0x7e, 0x59, 0xae, 0x06, 0x00, 0x00,
}
