// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kira/gov/councilor.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgClaimCouncilor struct {
	Moniker              string   `protobuf:"bytes,1,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Address              []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgClaimCouncilor) Reset()         { *m = MsgClaimCouncilor{} }
func (m *MsgClaimCouncilor) String() string { return proto.CompactTextString(m) }
func (*MsgClaimCouncilor) ProtoMessage()    {}
func (*MsgClaimCouncilor) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac0b13545050495, []int{0}
}

func (m *MsgClaimCouncilor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgClaimCouncilor.Unmarshal(m, b)
}
func (m *MsgClaimCouncilor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgClaimCouncilor.Marshal(b, m, deterministic)
}
func (m *MsgClaimCouncilor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClaimCouncilor.Merge(m, src)
}
func (m *MsgClaimCouncilor) XXX_Size() int {
	return xxx_messageInfo_MsgClaimCouncilor.Size(m)
}
func (m *MsgClaimCouncilor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClaimCouncilor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClaimCouncilor proto.InternalMessageInfo

func (m *MsgClaimCouncilor) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *MsgClaimCouncilor) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type Councilor struct {
	Moniker              string   `protobuf:"bytes,1,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Address              []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Councilor) Reset()         { *m = Councilor{} }
func (m *Councilor) String() string { return proto.CompactTextString(m) }
func (*Councilor) ProtoMessage()    {}
func (*Councilor) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac0b13545050495, []int{1}
}

func (m *Councilor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Councilor.Unmarshal(m, b)
}
func (m *Councilor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Councilor.Marshal(b, m, deterministic)
}
func (m *Councilor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Councilor.Merge(m, src)
}
func (m *Councilor) XXX_Size() int {
	return xxx_messageInfo_Councilor.Size(m)
}
func (m *Councilor) XXX_DiscardUnknown() {
	xxx_messageInfo_Councilor.DiscardUnknown(m)
}

var xxx_messageInfo_Councilor proto.InternalMessageInfo

func (m *Councilor) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *Councilor) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgClaimCouncilor)(nil), "kira.gov.MsgClaimCouncilor")
	proto.RegisterType((*Councilor)(nil), "kira.gov.Councilor")
}

func init() { proto.RegisterFile("kira/gov/councilor.proto", fileDescriptor_cac0b13545050495) }

var fileDescriptor_cac0b13545050495 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc8, 0xce, 0x2c, 0x4a,
	0xd4, 0x4f, 0xcf, 0x2f, 0xd3, 0x4f, 0xce, 0x2f, 0xcd, 0x4b, 0xce, 0xcc, 0xc9, 0x2f, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0xc9, 0xe8, 0xa5, 0xe7, 0x97, 0x49, 0x89, 0xa4, 0xe7,
	0xa7, 0xe7, 0x83, 0x05, 0xf5, 0x41, 0x2c, 0x88, 0xbc, 0xd2, 0x24, 0x46, 0x2e, 0x41, 0xdf, 0xe2,
	0x74, 0xe7, 0x9c, 0xc4, 0xcc, 0x5c, 0x67, 0x98, 0x5e, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xfc, 0xbc,
	0xcc, 0xec, 0xd4, 0x22, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x28, 0x96, 0x8b,
	0x3d, 0x31, 0x25, 0xa5, 0x28, 0xb5, 0xb8, 0x58, 0x82, 0x49, 0x81, 0x51, 0x83, 0xc7, 0xc9, 0xf9,
	0xd3, 0x3d, 0x79, 0xbe, 0xca, 0xc4, 0xdc, 0x1c, 0x2b, 0x25, 0xa8, 0x84, 0xd2, 0xaf, 0x7b, 0xf2,
	0xba, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xc9, 0xf9, 0xc5, 0xb9,
	0xf9, 0xc5, 0x50, 0x4a, 0xb7, 0x38, 0x25, 0x5b, 0xbf, 0xa4, 0xb2, 0x20, 0xb5, 0x58, 0xcf, 0x31,
	0x39, 0xd9, 0x11, 0xa2, 0x23, 0x08, 0x66, 0xa6, 0x15, 0xcb, 0x8b, 0x05, 0xf2, 0x8c, 0x4a, 0x2d,
	0x8c, 0x5c, 0x9c, 0x03, 0xef, 0x18, 0x27, 0xf5, 0x28, 0x55, 0x24, 0x9d, 0xde, 0x99, 0x45, 0x89,
	0xce, 0xf9, 0x45, 0xa9, 0xfa, 0xc5, 0xa9, 0xd9, 0x89, 0x99, 0xfa, 0x15, 0xe0, 0xe0, 0x06, 0x6b,
	0x4e, 0x62, 0x03, 0x87, 0xa5, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x31, 0xc7, 0x49, 0x7c, 0x87,
	0x01, 0x00, 0x00,
}
