// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kira/slashing/v1beta1/slashing.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ValidatorSigningInfo defines a validator's signing info for monitoring their
// liveness activity.
type ValidatorSigningInfo struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// height at which validator was first a candidate OR was activated
	StartHeight int64 `protobuf:"varint,2,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	// timestamp validator cannot be activated until
	InactiveUntil *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=inactive_until,json=inactiveUntil,proto3" json:"inactive_until,omitempty"`
	// mischance confidence counter - count when it's in active status
	MischanceConfidence int64 `protobuf:"varint,4,opt,name=mischance_confidence,json=mischanceConfidence,proto3" json:"mischance_confidence,omitempty"`
	// missed blocks counter after mischance confidence - count when it's in active status
	Mischance int64 `protobuf:"varint,5,opt,name=mischance,proto3" json:"mischance,omitempty"`
	// last signed block height by the validator
	LastPresentBlock int64 `protobuf:"varint,6,opt,name=last_present_block,json=lastPresentBlock,proto3" json:"last_present_block,omitempty"`
	// missed blocks counter (to avoid scanning the array every time)
	MissedBlocksCounter int64 `protobuf:"varint,7,opt,name=missed_blocks_counter,json=missedBlocksCounter,proto3" json:"missed_blocks_counter,omitempty"`
	// count produced blocks so far by a validator
	ProducedBlocksCounter int64    `protobuf:"varint,8,opt,name=produced_blocks_counter,json=producedBlocksCounter,proto3" json:"produced_blocks_counter,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ValidatorSigningInfo) Reset()         { *m = ValidatorSigningInfo{} }
func (m *ValidatorSigningInfo) String() string { return proto.CompactTextString(m) }
func (*ValidatorSigningInfo) ProtoMessage()    {}
func (*ValidatorSigningInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_394fd0d651f29967, []int{0}
}

func (m *ValidatorSigningInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSigningInfo.Unmarshal(m, b)
}
func (m *ValidatorSigningInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSigningInfo.Marshal(b, m, deterministic)
}
func (m *ValidatorSigningInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSigningInfo.Merge(m, src)
}
func (m *ValidatorSigningInfo) XXX_Size() int {
	return xxx_messageInfo_ValidatorSigningInfo.Size(m)
}
func (m *ValidatorSigningInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSigningInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSigningInfo proto.InternalMessageInfo

func (m *ValidatorSigningInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ValidatorSigningInfo) GetStartHeight() int64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *ValidatorSigningInfo) GetInactiveUntil() *timestamppb.Timestamp {
	if m != nil {
		return m.InactiveUntil
	}
	return nil
}

func (m *ValidatorSigningInfo) GetMischanceConfidence() int64 {
	if m != nil {
		return m.MischanceConfidence
	}
	return 0
}

func (m *ValidatorSigningInfo) GetMischance() int64 {
	if m != nil {
		return m.Mischance
	}
	return 0
}

func (m *ValidatorSigningInfo) GetLastPresentBlock() int64 {
	if m != nil {
		return m.LastPresentBlock
	}
	return 0
}

func (m *ValidatorSigningInfo) GetMissedBlocksCounter() int64 {
	if m != nil {
		return m.MissedBlocksCounter
	}
	return 0
}

func (m *ValidatorSigningInfo) GetProducedBlocksCounter() int64 {
	if m != nil {
		return m.ProducedBlocksCounter
	}
	return 0
}

// Params represents the parameters used for by the slashing module.
type Params struct {
	DowntimeInactiveDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=downtime_inactive_duration,json=downtimeInactiveDuration,proto3" json:"downtime_inactive_duration,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}             `json:"-"`
	XXX_unrecognized         []byte               `json:"-"`
	XXX_sizecache            int32                `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_394fd0d651f29967, []int{1}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetDowntimeInactiveDuration() *durationpb.Duration {
	if m != nil {
		return m.DowntimeInactiveDuration
	}
	return nil
}

func init() {
	proto.RegisterType((*ValidatorSigningInfo)(nil), "kira.slashing.ValidatorSigningInfo")
	proto.RegisterType((*Params)(nil), "kira.slashing.Params")
}

func init() {
	proto.RegisterFile("kira/slashing/v1beta1/slashing.proto", fileDescriptor_394fd0d651f29967)
}

var fileDescriptor_394fd0d651f29967 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x17, 0x0a, 0xdd, 0xe6, 0x32, 0x84, 0xbc, 0x56, 0x33, 0x15, 0x5a, 0xba, 0x88, 0x43,
	0x85, 0x20, 0xa1, 0x45, 0xe2, 0xd0, 0x63, 0xcb, 0x81, 0x89, 0xcb, 0x54, 0xfe, 0x1c, 0xb8, 0x44,
	0xae, 0xed, 0x3a, 0x56, 0x13, 0x3b, 0xb2, 0x9d, 0xc1, 0xbe, 0x00, 0x67, 0xb8, 0xed, 0xb8, 0x23,
	0xdf, 0x04, 0x3e, 0x45, 0x91, 0x38, 0x71, 0xde, 0x27, 0x40, 0x71, 0x9a, 0x8c, 0x31, 0x71, 0xcb,
	0xfb, 0xfc, 0x9e, 0xd7, 0x79, 0xf4, 0x38, 0x01, 0x8f, 0x56, 0x42, 0xe3, 0xc8, 0xa4, 0xd8, 0x24,
	0x42, 0xf2, 0xe8, 0x74, 0xb4, 0x60, 0x16, 0x8f, 0x1a, 0x21, 0xcc, 0xb5, 0xb2, 0x0a, 0xee, 0x95,
	0xae, 0xb0, 0x16, 0xfb, 0x5d, 0xae, 0xb8, 0x72, 0x24, 0x2a, 0x9f, 0x2a, 0x53, 0xff, 0x90, 0x2b,
	0xc5, 0x53, 0x16, 0xb9, 0x69, 0x51, 0x2c, 0x23, 0x5a, 0x68, 0x6c, 0x85, 0x92, 0x1b, 0xee, 0xff,
	0xcb, 0xad, 0xc8, 0x98, 0xb1, 0x38, 0xcb, 0x2b, 0x43, 0xf0, 0xbd, 0x05, 0xba, 0xef, 0x71, 0x2a,
	0x28, 0xb6, 0x4a, 0xbf, 0x11, 0x5c, 0x0a, 0xc9, 0x8f, 0xe5, 0x52, 0x41, 0x04, 0xb6, 0x31, 0xa5,
	0x9a, 0x19, 0x83, 0xbc, 0x81, 0x37, 0xdc, 0x9d, 0xd7, 0x23, 0x9c, 0x80, 0xbb, 0xc6, 0x62, 0x6d,
	0xe3, 0x84, 0x09, 0x9e, 0x58, 0x74, 0x6b, 0xe0, 0x0d, 0x5b, 0xd3, 0x83, 0xcb, 0xb5, 0xbf, 0x7f,
	0x86, 0xb3, 0x74, 0x12, 0xfc, 0x4d, 0x83, 0x79, 0xc7, 0x8d, 0xaf, 0xdc, 0x04, 0x29, 0xb8, 0x27,
	0x24, 0x26, 0x56, 0x9c, 0xb2, 0xb8, 0x90, 0x56, 0xa4, 0xa8, 0x35, 0xf0, 0x86, 0x9d, 0x71, 0x3f,
	0xac, 0x82, 0x86, 0x75, 0xd0, 0xf0, 0x6d, 0x1d, 0x74, 0x7a, 0xf4, 0x63, 0xed, 0x6f, 0x5d, 0xae,
	0xfd, 0x5e, 0x75, 0xfa, 0xf5, 0xfd, 0xe0, 0xcb, 0x4f, 0xdf, 0x9b, 0xef, 0xd5, 0xe2, 0xbb, 0x52,
	0x83, 0x23, 0xd0, 0xcd, 0x84, 0x21, 0x09, 0x96, 0x84, 0xc5, 0x44, 0xc9, 0xa5, 0xa0, 0x4c, 0x12,
	0x86, 0x6e, 0x97, 0x49, 0xe7, 0xfb, 0x0d, 0x9b, 0x35, 0x08, 0x3e, 0x04, 0xbb, 0x8d, 0x8c, 0xee,
	0x38, 0xdf, 0x95, 0x00, 0x9f, 0x00, 0x98, 0x62, 0x63, 0xe3, 0x5c, 0x33, 0xc3, 0xa4, 0x8d, 0x17,
	0xa9, 0x22, 0x2b, 0xd4, 0x76, 0xb6, 0xfb, 0x25, 0x39, 0xa9, 0xc0, 0xb4, 0xd4, 0xe1, 0x18, 0xf4,
	0x32, 0x61, 0x0c, 0xa3, 0x95, 0xcf, 0xc4, 0x44, 0x15, 0xd2, 0x32, 0x8d, 0xb6, 0x9b, 0xf7, 0x1b,
	0x46, 0x9d, 0xd7, 0xcc, 0x2a, 0x04, 0x5f, 0x80, 0x83, 0x5c, 0x2b, 0x5a, 0x90, 0x9b, 0x5b, 0x3b,
	0x6e, 0xab, 0x57, 0xe3, 0x6b, 0x7b, 0x93, 0x9d, 0xf3, 0x0b, 0x7f, 0xeb, 0xf7, 0x85, 0xef, 0x05,
	0x5f, 0x3d, 0xd0, 0x3e, 0xc1, 0x1a, 0x67, 0x06, 0x7e, 0xf6, 0x40, 0x9f, 0xaa, 0x8f, 0xb2, 0xbc,
	0xec, 0xb8, 0xe9, 0xab, 0xfe, 0x34, 0xdc, 0x7d, 0x76, 0xc6, 0x0f, 0x6e, 0x54, 0xfe, 0x72, 0x63,
	0x98, 0x3e, 0xdd, 0x34, 0x7e, 0x54, 0x35, 0xfe, 0xff, 0xa3, 0x82, 0xf3, 0xb2, 0x7d, 0x54, 0x1b,
	0x8e, 0x37, 0xbc, 0x39, 0xe8, 0xd9, 0xb7, 0x5f, 0x87, 0xde, 0x87, 0xc7, 0x5c, 0xd8, 0xa4, 0x58,
	0x84, 0x44, 0x65, 0xd1, 0x6b, 0xa1, 0xf1, 0x4c, 0x69, 0x16, 0x19, 0xb6, 0xc2, 0x22, 0xfa, 0x74,
	0xf5, 0x1b, 0xd8, 0xb3, 0x9c, 0x99, 0x45, 0xdb, 0xa5, 0x79, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x47, 0x6d, 0x3f, 0x4d, 0x24, 0x03, 0x00, 0x00,
}
