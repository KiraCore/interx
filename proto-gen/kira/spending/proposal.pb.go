// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kira/spending/proposal.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/regen-network/cosmos-proto"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// proposal-spending-pool-update - a function to create a proposal allowing
// modification of the existing spending pool, adding owners, beneficiaries,
// or otherwise editing any of the existing properties.
type UpdateSpendingPoolProposal struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClaimStart           uint64    `protobuf:"varint,2,opt,name=claim_start,json=claimStart,proto3" json:"claim_start,omitempty"`
	ClaimEnd             uint64    `protobuf:"varint,3,opt,name=claim_end,json=claimEnd,proto3" json:"claim_end,omitempty"`
	Token                string    `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Rate                 string    `protobuf:"bytes,5,opt,name=rate,proto3" json:"rate,omitempty"`
	VoteQuorum           uint64    `protobuf:"varint,6,opt,name=vote_quorum,json=voteQuorum,proto3" json:"vote_quorum,omitempty"`
	VotePeriod           uint64    `protobuf:"varint,7,opt,name=vote_period,json=votePeriod,proto3" json:"vote_period,omitempty"`
	VoteEnactment        uint64    `protobuf:"varint,8,opt,name=vote_enactment,json=voteEnactment,proto3" json:"vote_enactment,omitempty"`
	Owners               *PermInfo `protobuf:"bytes,9,opt,name=owners,proto3" json:"owners,omitempty"`
	Beneficiaries        *PermInfo `protobuf:"bytes,10,opt,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSpendingPoolProposal) Reset()         { *m = UpdateSpendingPoolProposal{} }
func (m *UpdateSpendingPoolProposal) String() string { return proto.CompactTextString(m) }
func (*UpdateSpendingPoolProposal) ProtoMessage()    {}
func (*UpdateSpendingPoolProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e006ef21562b5bc9, []int{0}
}

func (m *UpdateSpendingPoolProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSpendingPoolProposal.Unmarshal(m, b)
}
func (m *UpdateSpendingPoolProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSpendingPoolProposal.Marshal(b, m, deterministic)
}
func (m *UpdateSpendingPoolProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSpendingPoolProposal.Merge(m, src)
}
func (m *UpdateSpendingPoolProposal) XXX_Size() int {
	return xxx_messageInfo_UpdateSpendingPoolProposal.Size(m)
}
func (m *UpdateSpendingPoolProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSpendingPoolProposal.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSpendingPoolProposal proto.InternalMessageInfo

func (m *UpdateSpendingPoolProposal) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateSpendingPoolProposal) GetClaimStart() uint64 {
	if m != nil {
		return m.ClaimStart
	}
	return 0
}

func (m *UpdateSpendingPoolProposal) GetClaimEnd() uint64 {
	if m != nil {
		return m.ClaimEnd
	}
	return 0
}

func (m *UpdateSpendingPoolProposal) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UpdateSpendingPoolProposal) GetRate() string {
	if m != nil {
		return m.Rate
	}
	return ""
}

func (m *UpdateSpendingPoolProposal) GetVoteQuorum() uint64 {
	if m != nil {
		return m.VoteQuorum
	}
	return 0
}

func (m *UpdateSpendingPoolProposal) GetVotePeriod() uint64 {
	if m != nil {
		return m.VotePeriod
	}
	return 0
}

func (m *UpdateSpendingPoolProposal) GetVoteEnactment() uint64 {
	if m != nil {
		return m.VoteEnactment
	}
	return 0
}

func (m *UpdateSpendingPoolProposal) GetOwners() *PermInfo {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *UpdateSpendingPoolProposal) GetBeneficiaries() *PermInfo {
	if m != nil {
		return m.Beneficiaries
	}
	return nil
}

// SpendingPoolDistributionProposal - force distribution of tokens to all
// beneficiaries registered in the claims array (this function should be
// automatically triggered before upgrades are executed)
type SpendingPoolDistributionProposal struct {
	PoolName             string   `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpendingPoolDistributionProposal) Reset()         { *m = SpendingPoolDistributionProposal{} }
func (m *SpendingPoolDistributionProposal) String() string { return proto.CompactTextString(m) }
func (*SpendingPoolDistributionProposal) ProtoMessage()    {}
func (*SpendingPoolDistributionProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e006ef21562b5bc9, []int{1}
}

func (m *SpendingPoolDistributionProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpendingPoolDistributionProposal.Unmarshal(m, b)
}
func (m *SpendingPoolDistributionProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpendingPoolDistributionProposal.Marshal(b, m, deterministic)
}
func (m *SpendingPoolDistributionProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpendingPoolDistributionProposal.Merge(m, src)
}
func (m *SpendingPoolDistributionProposal) XXX_Size() int {
	return xxx_messageInfo_SpendingPoolDistributionProposal.Size(m)
}
func (m *SpendingPoolDistributionProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_SpendingPoolDistributionProposal.DiscardUnknown(m)
}

var xxx_messageInfo_SpendingPoolDistributionProposal proto.InternalMessageInfo

func (m *SpendingPoolDistributionProposal) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

// SpendingPoolWithdrawProposal - proposal allowing withdrawal of funds
// from the pool to one or many specified accounts. Withdrawal should only
// be possible if the receiving account/s are on the list of registered
// beneficiaries.
type SpendingPoolWithdrawProposal struct {
	PoolName             string   `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Beneficiaries        []string `protobuf:"bytes,2,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	Amounts              []string `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpendingPoolWithdrawProposal) Reset()         { *m = SpendingPoolWithdrawProposal{} }
func (m *SpendingPoolWithdrawProposal) String() string { return proto.CompactTextString(m) }
func (*SpendingPoolWithdrawProposal) ProtoMessage()    {}
func (*SpendingPoolWithdrawProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e006ef21562b5bc9, []int{2}
}

func (m *SpendingPoolWithdrawProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpendingPoolWithdrawProposal.Unmarshal(m, b)
}
func (m *SpendingPoolWithdrawProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpendingPoolWithdrawProposal.Marshal(b, m, deterministic)
}
func (m *SpendingPoolWithdrawProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpendingPoolWithdrawProposal.Merge(m, src)
}
func (m *SpendingPoolWithdrawProposal) XXX_Size() int {
	return xxx_messageInfo_SpendingPoolWithdrawProposal.Size(m)
}
func (m *SpendingPoolWithdrawProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_SpendingPoolWithdrawProposal.DiscardUnknown(m)
}

var xxx_messageInfo_SpendingPoolWithdrawProposal proto.InternalMessageInfo

func (m *SpendingPoolWithdrawProposal) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

func (m *SpendingPoolWithdrawProposal) GetBeneficiaries() []string {
	if m != nil {
		return m.Beneficiaries
	}
	return nil
}

func (m *SpendingPoolWithdrawProposal) GetAmounts() []string {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateSpendingPoolProposal)(nil), "kira.gov.UpdateSpendingPoolProposal")
	proto.RegisterType((*SpendingPoolDistributionProposal)(nil), "kira.gov.SpendingPoolDistributionProposal")
	proto.RegisterType((*SpendingPoolWithdrawProposal)(nil), "kira.gov.SpendingPoolWithdrawProposal")
}

func init() { proto.RegisterFile("kira/spending/proposal.proto", fileDescriptor_e006ef21562b5bc9) }

var fileDescriptor_e006ef21562b5bc9 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0x6b, 0x1b, 0x3f,
	0x10, 0xfd, 0x6d, 0xec, 0x24, 0xb6, 0x42, 0x7e, 0x05, 0x11, 0xa8, 0xea, 0x04, 0xd6, 0x98, 0xfe,
	0x31, 0xa5, 0xd9, 0x85, 0x96, 0x5e, 0x02, 0xbd, 0xd8, 0xc9, 0x21, 0x14, 0x8a, 0xe3, 0x50, 0x0a,
	0xbd, 0x18, 0x79, 0x77, 0xbc, 0x11, 0xb6, 0x34, 0x5b, 0x49, 0x9b, 0xd4, 0xdf, 0xa6, 0x1f, 0xa2,
	0xd7, 0xde, 0x7b, 0xe9, 0xa5, 0xc7, 0x1e, 0x7c, 0xee, 0xb9, 0x9f, 0xa0, 0x48, 0xbb, 0x4e, 0x5c,
	0xe7, 0xe2, 0xd3, 0x4a, 0xef, 0xbd, 0x79, 0xbc, 0xd9, 0x19, 0x91, 0xa3, 0xa9, 0xd0, 0x3c, 0x36,
	0x39, 0xa8, 0x54, 0xa8, 0x2c, 0xce, 0x35, 0xe6, 0x68, 0xf8, 0x2c, 0xca, 0x35, 0x5a, 0xa4, 0x0d,
	0xc7, 0x46, 0x19, 0x5e, 0xb7, 0x0e, 0x32, 0xcc, 0xd0, 0x83, 0xb1, 0x3b, 0x95, 0x7c, 0x2b, 0xcc,
	0x10, 0xb3, 0x19, 0xc4, 0xfe, 0x36, 0x2e, 0x26, 0xb1, 0x15, 0x12, 0x8c, 0xe5, 0x32, 0xaf, 0x04,
	0x8f, 0xd6, 0x05, 0x5c, 0xcd, 0x97, 0x54, 0x82, 0x46, 0xa2, 0x19, 0x95, 0xa6, 0xe5, 0xa5, 0xa2,
	0xd8, 0x5a, 0x28, 0xc4, 0x2a, 0x50, 0xe7, 0x47, 0x8d, 0xb4, 0xde, 0xe7, 0x29, 0xb7, 0x70, 0x59,
	0xb1, 0x03, 0xc4, 0xd9, 0xa0, 0x4a, 0x4d, 0x29, 0xa9, 0x2b, 0x2e, 0x81, 0x05, 0xed, 0xa0, 0xdb,
	0x1c, 0xfa, 0x33, 0x0d, 0xc9, 0x5e, 0x32, 0xe3, 0x42, 0x8e, 0x8c, 0xe5, 0xda, 0xb2, 0xad, 0x76,
	0xd0, 0xad, 0x0f, 0x89, 0x87, 0x2e, 0x1d, 0x42, 0x0f, 0x49, 0xb3, 0x14, 0x80, 0x4a, 0x59, 0xcd,
	0xd3, 0x0d, 0x0f, 0x9c, 0xa9, 0x94, 0x1e, 0x90, 0x6d, 0x8b, 0x53, 0x50, 0xac, 0xee, 0x2d, 0xcb,
	0x0b, 0xbd, 0x20, 0x75, 0xcd, 0x2d, 0xb0, 0x6d, 0x07, 0xf6, 0xde, 0x7c, 0x5f, 0x84, 0xff, 0xfd,
	0x5a, 0x84, 0x4f, 0x33, 0x61, 0xaf, 0x8a, 0x71, 0x94, 0xa0, 0xac, 0xfa, 0xa9, 0x3e, 0xc7, 0x26,
	0x9d, 0xc6, 0x76, 0x9e, 0x83, 0x89, 0x4e, 0x21, 0xf9, 0xb3, 0x08, 0xf7, 0xe6, 0x5c, 0xce, 0x4e,
	0x3a, 0xce, 0xa3, 0x33, 0xf4, 0x56, 0x2e, 0xe6, 0x35, 0x5a, 0x18, 0x7d, 0x2a, 0x50, 0x17, 0x92,
	0xed, 0x94, 0x31, 0x1d, 0x74, 0xe1, 0x91, 0x5b, 0x41, 0x0e, 0x5a, 0x60, 0xca, 0x76, 0xef, 0x04,
	0x03, 0x8f, 0xd0, 0x27, 0xe4, 0x7f, 0x2f, 0x00, 0xc5, 0x13, 0x2b, 0x41, 0x59, 0xd6, 0xf0, 0x9a,
	0x7d, 0x87, 0x9e, 0x2d, 0x41, 0xfa, 0x9a, 0xec, 0xe0, 0x8d, 0x02, 0x6d, 0x58, 0xb3, 0x1d, 0x74,
	0xf7, 0x5e, 0x3e, 0x8c, 0xfc, 0x90, 0x97, 0x7f, 0x3b, 0x1a, 0x80, 0x96, 0xe7, 0x6a, 0x82, 0xbd,
	0xba, 0x6b, 0x6b, 0x58, 0x89, 0x69, 0x9f, 0xec, 0x8f, 0x41, 0xc1, 0x44, 0x24, 0x82, 0x6b, 0x01,
	0x86, 0x91, 0x4d, 0xaa, 0xff, 0xad, 0x39, 0x79, 0xf0, 0xfb, 0x4b, 0x18, 0xfc, 0xfc, 0x7a, 0xbc,
	0xdb, 0x47, 0x65, 0x41, 0xd9, 0xce, 0x80, 0xb4, 0x57, 0x07, 0x79, 0x2a, 0x8c, 0xd5, 0x62, 0x5c,
	0x58, 0x81, 0xea, 0x76, 0xa8, 0x87, 0xa4, 0xe9, 0x36, 0x60, 0xb4, 0x32, 0xd9, 0x86, 0x03, 0xde,
	0x71, 0x09, 0xf7, 0x1d, 0xbf, 0x05, 0xe4, 0x68, 0xd5, 0xf2, 0x83, 0xb0, 0x57, 0xa9, 0xe6, 0x37,
	0x1b, 0xd9, 0xd1, 0xc7, 0xeb, 0x5d, 0x6e, 0xb5, 0x6b, 0xdd, 0xe6, 0x5a, 0x1b, 0xf4, 0x9c, 0xec,
	0x72, 0x89, 0x85, 0xb2, 0x86, 0xd5, 0x1c, 0xdf, 0x8b, 0xab, 0x0d, 0x78, 0xb6, 0xc1, 0x06, 0xf4,
	0x51, 0xa8, 0xe1, 0xb2, 0xfe, 0x5e, 0xfe, 0xde, 0x8b, 0x8f, 0xcf, 0x57, 0x4c, 0xde, 0x0a, 0xcd,
	0xfb, 0xa8, 0x21, 0x36, 0x30, 0xe5, 0x22, 0xfe, 0x7c, 0xf7, 0x28, 0xbc, 0xd9, 0x78, 0xc7, 0x3f,
	0x8b, 0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x42, 0xdd, 0x61, 0xc3, 0xc7, 0x03, 0x00, 0x00,
}
